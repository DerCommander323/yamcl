unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
AR='ar'
export AR
AS='as'
export AS
BASH='/nix/store/cdfwlj71yd6p5bmxsk2gk9xqc0friykg-bash-5.1-p16/bin/bash'
CC='gcc'
export CC
CMAKE_INCLUDE_PATH='/nix/store/bc39j9xykzijxcz6q74zqihi31qhhym6-dbus-1.14.4-dev/include:/nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev/include:/nix/store/gz31hsi6hdf0a2xzsznwfmv7vdw4ahcn-openssl-3.0.8-dev/include:/nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev/include:/nix/store/bsslcbcnrfcv6nl0jfha444nxjky7zxa-zlib-1.2.13-dev/include:/nix/store/l7c92rkjf863an5swav4110qrkis73hk-libffi-3.4.4-dev/include:/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/include:/nix/store/fs78ayawqsacvrw1lbn7wq63x5av6gr0-glibc-iconv-2.35/include:/nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev/include:/nix/store/4nnk5spr3flhrkscdnjnizbk684w114j-at-spi2-core-2.46.0-dev/include:/nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev/include:/nix/store/rdlzk9abm14a48amswlnkcy9p461iwn9-fontconfig-2.14.0-dev/include:/nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev/include:/nix/store/5b7fc424v8p3mskkgv221rn99gbj6iy9-bzip2-1.0.8-dev/include:/nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev/include:/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/include:/nix/store/yvzdsyd505lnqlj68z13jql4c2hgr1j8-libXext-1.3.4-dev/include:/nix/store/dgfh4gqspzgn3dcbbxl8zvd8hwrq0chm-xorgproto-2021.5/include:/nix/store/kz2kxdqfkrm6gwir5m1iz8zc7d33q8ch-libXau-1.0.9-dev/include:/nix/store/pyaadbqg7kalglzs2rpwchg72cvk6bxh-libXrender-0.9.10-dev/include:/nix/store/0d3w70qlw46swm188cm6xyklc2pk9p81-libX11-1.8.4-dev/include:/nix/store/wqgr8z72bhza1ffb5vzqivg85a7l5njl-libxcb-1.14-dev/include:/nix/store/jg16yffkxbxvd3pwp9s85fzy7bnyv67z-xcb-util-0.4.0-dev/include:/nix/store/6xf7yvkjjcwnpv5v0pq3qg9p3ynmzi8l-libGL-1.5.0-dev/include:/nix/store/mipiv1dlvmb3vyh7asyqbls265g14dyw-libglvnd-1.5.0-dev/include:/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/include:/nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev/include:/nix/store/pz10fqn6ivqjvmfva3fpbm1sj1h8mppn-libtiff-4.4.0-dev/include:/nix/store/52mjgn5wb0qyfdzdx28k23a8q3ip2bi3-libjpeg-turbo-2.1.4-dev/include:/nix/store/4mxfwln7ar5cniwzr81y3z013n3w0nhq-xz-5.2.7-dev/include:/nix/store/si7bwnd2p7d1bfqig9l2w1xfghl50jrm-gsettings-desktop-schemas-43.0/include:/nix/store/bzg5kj7nq2fvd3gf7cp56di5cqplrabb-libICE-1.0.10-dev/include:/nix/store/iz3v8b4l7s9ddfq9l6slx2plw5kqxy6j-libSM-1.2.3-dev/include:/nix/store/6g4w9rfb52f47pfnv8g35is3m526vdv0-libXcomposite-0.4.5-dev/include:/nix/store/r5c881pxp69as01yiw0jh10y4d35cmbh-libXfixes-6.0.0-dev/include:/nix/store/26p0j8gbl2m78mqksk8rh9dari7sbviq-libXcursor-1.2.0-dev/include:/nix/store/5ai194payhqhmxz6x12g0h16h6b0frx7-libXdamage-1.1.5-dev/include:/nix/store/2r9cvz2v524rjcmmp26043ms7s3dnmrc-libXi-1.8-dev/include:/nix/store/gani2rj9vbg126dxyjb940pvw4bqrxn3-libXrandr-1.5.2-dev/include:/nix/store/naw9z8ppdi1sv23bkzw8lrq3hh0hlq6j-pango-1.50.12-dev/include:/nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev/include:/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/include:/nix/store/cxnv2w7saywi1yrca9yrvf0735i5is23-libXft-2.3.6-dev/include:/nix/store/asj7vmsvcfk49cx21ayxllha2ib28a5i-wayland-1.21.0-dev/include:/nix/store/301p8a3ma4css4jbxyh5qqplsppglvf4-libXinerama-1.1.4-dev/include:/nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev/include:/nix/store/r8b24303nrxssliqxqa8nhhjd1brnnhs-gmp-with-cxx-6.2.1-dev/include:/nix/store/qyv1mx1dniw6675wmx73iy311j7scpa7-libsoup-2.74.3-dev/include:/nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev/include:/nix/store/cpfhj8ipiwsf1884n0mpqgmzzfih0bfr-webkitgtk-2.38.5+abi=4.0-dev/include:/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/include:/nix/store/bc39j9xykzijxcz6q74zqihi31qhhym6-dbus-1.14.4-dev/include:/nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev/include:/nix/store/gz31hsi6hdf0a2xzsznwfmv7vdw4ahcn-openssl-3.0.8-dev/include:/nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev/include:/nix/store/bsslcbcnrfcv6nl0jfha444nxjky7zxa-zlib-1.2.13-dev/include:/nix/store/l7c92rkjf863an5swav4110qrkis73hk-libffi-3.4.4-dev/include:/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/include:/nix/store/fs78ayawqsacvrw1lbn7wq63x5av6gr0-glibc-iconv-2.35/include:/nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev/include:/nix/store/4nnk5spr3flhrkscdnjnizbk684w114j-at-spi2-core-2.46.0-dev/include:/nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev/include:/nix/store/rdlzk9abm14a48amswlnkcy9p461iwn9-fontconfig-2.14.0-dev/include:/nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev/include:/nix/store/5b7fc424v8p3mskkgv221rn99gbj6iy9-bzip2-1.0.8-dev/include:/nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev/include:/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/include:/nix/store/yvzdsyd505lnqlj68z13jql4c2hgr1j8-libXext-1.3.4-dev/include:/nix/store/dgfh4gqspzgn3dcbbxl8zvd8hwrq0chm-xorgproto-2021.5/include:/nix/store/kz2kxdqfkrm6gwir5m1iz8zc7d33q8ch-libXau-1.0.9-dev/include:/nix/store/pyaadbqg7kalglzs2rpwchg72cvk6bxh-libXrender-0.9.10-dev/include:/nix/store/0d3w70qlw46swm188cm6xyklc2pk9p81-libX11-1.8.4-dev/include:/nix/store/wqgr8z72bhza1ffb5vzqivg85a7l5njl-libxcb-1.14-dev/include:/nix/store/jg16yffkxbxvd3pwp9s85fzy7bnyv67z-xcb-util-0.4.0-dev/include:/nix/store/6xf7yvkjjcwnpv5v0pq3qg9p3ynmzi8l-libGL-1.5.0-dev/include:/nix/store/mipiv1dlvmb3vyh7asyqbls265g14dyw-libglvnd-1.5.0-dev/include:/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/include:/nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev/include:/nix/store/pz10fqn6ivqjvmfva3fpbm1sj1h8mppn-libtiff-4.4.0-dev/include:/nix/store/52mjgn5wb0qyfdzdx28k23a8q3ip2bi3-libjpeg-turbo-2.1.4-dev/include:/nix/store/4mxfwln7ar5cniwzr81y3z013n3w0nhq-xz-5.2.7-dev/include:/nix/store/si7bwnd2p7d1bfqig9l2w1xfghl50jrm-gsettings-desktop-schemas-43.0/include:/nix/store/bzg5kj7nq2fvd3gf7cp56di5cqplrabb-libICE-1.0.10-dev/include:/nix/store/iz3v8b4l7s9ddfq9l6slx2plw5kqxy6j-libSM-1.2.3-dev/include:/nix/store/6g4w9rfb52f47pfnv8g35is3m526vdv0-libXcomposite-0.4.5-dev/include:/nix/store/r5c881pxp69as01yiw0jh10y4d35cmbh-libXfixes-6.0.0-dev/include:/nix/store/26p0j8gbl2m78mqksk8rh9dari7sbviq-libXcursor-1.2.0-dev/include:/nix/store/5ai194payhqhmxz6x12g0h16h6b0frx7-libXdamage-1.1.5-dev/include:/nix/store/2r9cvz2v524rjcmmp26043ms7s3dnmrc-libXi-1.8-dev/include:/nix/store/gani2rj9vbg126dxyjb940pvw4bqrxn3-libXrandr-1.5.2-dev/include:/nix/store/naw9z8ppdi1sv23bkzw8lrq3hh0hlq6j-pango-1.50.12-dev/include:/nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev/include:/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/include:/nix/store/cxnv2w7saywi1yrca9yrvf0735i5is23-libXft-2.3.6-dev/include:/nix/store/asj7vmsvcfk49cx21ayxllha2ib28a5i-wayland-1.21.0-dev/include:/nix/store/301p8a3ma4css4jbxyh5qqplsppglvf4-libXinerama-1.1.4-dev/include:/nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev/include:/nix/store/r8b24303nrxssliqxqa8nhhjd1brnnhs-gmp-with-cxx-6.2.1-dev/include:/nix/store/qyv1mx1dniw6675wmx73iy311j7scpa7-libsoup-2.74.3-dev/include:/nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev/include:/nix/store/cpfhj8ipiwsf1884n0mpqgmzzfih0bfr-webkitgtk-2.38.5+abi=4.0-dev/include:/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/include'
export CMAKE_INCLUDE_PATH
CMAKE_LIBRARY_PATH='/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef/lib:/nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0/lib:/nix/store/yi2kw56ix8fdwjzd089zqdly102n1f95-expat-2.5.0/lib:/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib/lib:/nix/store/np58sm45gngld2nnqjq6p532j3v2kbfl-openssl-3.0.8/lib:/nix/store/4xqki8nyafl26w2p71w988djvfmfz4x1-zlib-1.2.13/lib:/nix/store/iarp5ija5frd4cj237lw8y0lir4l8b4f-libffi-3.4.4/lib:/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/lib:/nix/store/li6g1fg7l45c2fq8kq6gfy81jm1lwla3-glib-2.74.3/lib:/nix/store/z72g6cbnyvr4ik19p1jmaq36iz6qh2al-at-spi2-core-2.46.0/lib:/nix/store/kdz2f3z0cyx553sz9j68cbcm10xsmk45-bzip2-1.0.8/lib:/nix/store/q07p023whnl7xn3hncjny62g7vj4ad5q-libpng-apng-1.6.37/lib:/nix/store/lwvv4fns4d05h22cjd9r8axblgmdcjc3-freetype-2.12.1/lib:/nix/store/j9c7b5mj90jcqx328qwx9ss6llbraam3-fontconfig-2.14.0-lib/lib:/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/lib:/nix/store/1p8cxmc6zn0121aq11l6c9b52mjw1634-libXau-1.0.9/lib:/nix/store/bc5wfm9vng74b23z528kryph1vg361d1-libXext-1.3.4/lib:/nix/store/qlvfjybj7zfd3la21av72lakd8dgakj6-libxcb-1.14/lib:/nix/store/8849pngybhw9bxnciazr8vj1icxq7kzy-libX11-1.8.4/lib:/nix/store/900mvpl3jn2816sj4rqkr5q7wm77np5q-libXrender-0.9.10/lib:/nix/store/mlc9kysnjmbqy3br03h3p4qdrjyzb4rp-xcb-util-0.4.0/lib:/nix/store/6ysdnx59r6idn6hqsma31fd9nch3bbhc-libGL-1.5.0/lib:/nix/store/6qrsxnflfyr7g50m2y4f9r92fm076yxq-libglvnd-1.5.0/lib:/nix/store/y29q03rbsxm5r26jmqqah7lpi3qfj8r8-cairo-1.16.0/lib:/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/lib:/nix/store/kgjip3sdackjknvazjrrqg1rma2z3p85-libjpeg-turbo-2.1.4/lib:/nix/store/pba2y71yi3hxhn7vmab9hwsmi8a69v41-xz-5.2.7/lib:/nix/store/drc7a6vnrfib5cxab962289r2i3wx0i5-libtiff-4.4.0/lib:/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10/lib:/nix/store/9yv535640914hhcnlc9iyzmq4n8bb2sa-libICE-1.0.10/lib:/nix/store/gdz6vb8h6sh3ggscnrps6arqip3mq69w-libSM-1.2.3/lib:/nix/store/1ih4f54i0i0hkb1rwzywxfdm25jfrrb8-libXfixes-6.0.0/lib:/nix/store/3i0givqr6d7w5c706f32rby4c9zws1ii-libXcomposite-0.4.5/lib:/nix/store/c7bcn6jr82bnfwl6nrlvspj2ysj8si1j-libXcursor-1.2.0/lib:/nix/store/j922381s593yyshcdk4hnvx8wivvbgfr-libXdamage-1.1.5/lib:/nix/store/1sxbhkma4bdkxwnl90vmh8z6lpfank95-libXi-1.8/lib:/nix/store/3rpbhbnhkqm22cs12ka8zll3bq3m5h5d-libXrandr-1.5.2/lib:/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/lib:/nix/store/r7hl9pcjr94xv2y7sc7bwl0cr6yvkvi9-harfbuzz-5.2.0/lib:/nix/store/fiiyix63nzqg7nqpxi7cnm1dva03c955-libXft-2.3.6/lib:/nix/store/lzy87jr1rg06kh89q49p4hsf6ngqnh7k-pango-1.50.12/lib:/nix/store/i1nlwakpsjx90b5274zbz4gsfc0dd3lw-wayland-1.21.0/lib:/nix/store/i68jz10hjlzbbjasi4wgh2i0hi5s3gvr-libXinerama-1.1.4/lib:/nix/store/qa8wjyjm791632xsm8pzvp0v00m90yxw-gmp-with-cxx-6.2.1/lib:/nix/store/wb4m1f6ywhzmvfpdwinbfpnpj8i4lvzn-cups-2.4.2-lib/lib:/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/lib:/nix/store/s5qp4yyysx3ylafw7ia2mlvybmg77ys7-libxml2-2.10.3/lib:/nix/store/dn8xrykgpw2hs96pw9jk3xf1zb3csr9q-libsoup-2.74.3/lib:/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0/lib:/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/lib:/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef/lib:/nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0/lib:/nix/store/yi2kw56ix8fdwjzd089zqdly102n1f95-expat-2.5.0/lib:/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib/lib:/nix/store/np58sm45gngld2nnqjq6p532j3v2kbfl-openssl-3.0.8/lib:/nix/store/4xqki8nyafl26w2p71w988djvfmfz4x1-zlib-1.2.13/lib:/nix/store/iarp5ija5frd4cj237lw8y0lir4l8b4f-libffi-3.4.4/lib:/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/lib:/nix/store/li6g1fg7l45c2fq8kq6gfy81jm1lwla3-glib-2.74.3/lib:/nix/store/z72g6cbnyvr4ik19p1jmaq36iz6qh2al-at-spi2-core-2.46.0/lib:/nix/store/kdz2f3z0cyx553sz9j68cbcm10xsmk45-bzip2-1.0.8/lib:/nix/store/q07p023whnl7xn3hncjny62g7vj4ad5q-libpng-apng-1.6.37/lib:/nix/store/lwvv4fns4d05h22cjd9r8axblgmdcjc3-freetype-2.12.1/lib:/nix/store/j9c7b5mj90jcqx328qwx9ss6llbraam3-fontconfig-2.14.0-lib/lib:/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/lib:/nix/store/1p8cxmc6zn0121aq11l6c9b52mjw1634-libXau-1.0.9/lib:/nix/store/bc5wfm9vng74b23z528kryph1vg361d1-libXext-1.3.4/lib:/nix/store/qlvfjybj7zfd3la21av72lakd8dgakj6-libxcb-1.14/lib:/nix/store/8849pngybhw9bxnciazr8vj1icxq7kzy-libX11-1.8.4/lib:/nix/store/900mvpl3jn2816sj4rqkr5q7wm77np5q-libXrender-0.9.10/lib:/nix/store/mlc9kysnjmbqy3br03h3p4qdrjyzb4rp-xcb-util-0.4.0/lib:/nix/store/6ysdnx59r6idn6hqsma31fd9nch3bbhc-libGL-1.5.0/lib:/nix/store/6qrsxnflfyr7g50m2y4f9r92fm076yxq-libglvnd-1.5.0/lib:/nix/store/y29q03rbsxm5r26jmqqah7lpi3qfj8r8-cairo-1.16.0/lib:/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/lib:/nix/store/kgjip3sdackjknvazjrrqg1rma2z3p85-libjpeg-turbo-2.1.4/lib:/nix/store/pba2y71yi3hxhn7vmab9hwsmi8a69v41-xz-5.2.7/lib:/nix/store/drc7a6vnrfib5cxab962289r2i3wx0i5-libtiff-4.4.0/lib:/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10/lib:/nix/store/9yv535640914hhcnlc9iyzmq4n8bb2sa-libICE-1.0.10/lib:/nix/store/gdz6vb8h6sh3ggscnrps6arqip3mq69w-libSM-1.2.3/lib:/nix/store/1ih4f54i0i0hkb1rwzywxfdm25jfrrb8-libXfixes-6.0.0/lib:/nix/store/3i0givqr6d7w5c706f32rby4c9zws1ii-libXcomposite-0.4.5/lib:/nix/store/c7bcn6jr82bnfwl6nrlvspj2ysj8si1j-libXcursor-1.2.0/lib:/nix/store/j922381s593yyshcdk4hnvx8wivvbgfr-libXdamage-1.1.5/lib:/nix/store/1sxbhkma4bdkxwnl90vmh8z6lpfank95-libXi-1.8/lib:/nix/store/3rpbhbnhkqm22cs12ka8zll3bq3m5h5d-libXrandr-1.5.2/lib:/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/lib:/nix/store/r7hl9pcjr94xv2y7sc7bwl0cr6yvkvi9-harfbuzz-5.2.0/lib:/nix/store/fiiyix63nzqg7nqpxi7cnm1dva03c955-libXft-2.3.6/lib:/nix/store/lzy87jr1rg06kh89q49p4hsf6ngqnh7k-pango-1.50.12/lib:/nix/store/i1nlwakpsjx90b5274zbz4gsfc0dd3lw-wayland-1.21.0/lib:/nix/store/i68jz10hjlzbbjasi4wgh2i0hi5s3gvr-libXinerama-1.1.4/lib:/nix/store/qa8wjyjm791632xsm8pzvp0v00m90yxw-gmp-with-cxx-6.2.1/lib:/nix/store/wb4m1f6ywhzmvfpdwinbfpnpj8i4lvzn-cups-2.4.2-lib/lib:/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/lib:/nix/store/s5qp4yyysx3ylafw7ia2mlvybmg77ys7-libxml2-2.10.3/lib:/nix/store/dn8xrykgpw2hs96pw9jk3xf1zb3csr9q-libsoup-2.74.3/lib:/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0/lib:/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/lib'
export CMAKE_LIBRARY_PATH
CMAKE_PREFIX_PATH='/nix/store/qbbh33w8jwr1pb6vxp2aplcsdlj6hvvk-patchelf-0.15.0:/nix/store/9nj6qjqp0d25giirzj9f0k35g2s58g0h-gcc-wrapper-11.3.0:/nix/store/lxgn5spk779wflksgibx4jv4n10w6x71-binutils-wrapper-2.39:/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef:/nix/store/qbx0gskpalv09scmqk9p8iwfglxblq1h-cargo-1.64.0:/nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0:/nix/store/53wn361h9qz8bzq91gplym9m7fddf2va-rustfmt-1.64.0:/nix/store/kmmq2lp8s34wgvz4rxyxh3vps6nzhqbh-cmake-3.24.3:/nix/store/m0p2xy7km6sj75bn30j1dvrz2v83bzi9-pkg-config-wrapper-0.29.2:/nix/store/bc39j9xykzijxcz6q74zqihi31qhhym6-dbus-1.14.4-dev:/nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev:/nix/store/yi2kw56ix8fdwjzd089zqdly102n1f95-expat-2.5.0:/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib:/nix/store/b1vhk5dgygzk9dmad4w7gdkbzszznwfb-dbus-1.14.4:/nix/store/gz31hsi6hdf0a2xzsznwfmv7vdw4ahcn-openssl-3.0.8-dev:/nix/store/hpcwwg6k6hfrp1fyf3vc1llkkl5gf3vv-openssl-3.0.8-bin:/nix/store/np58sm45gngld2nnqjq6p532j3v2kbfl-openssl-3.0.8:/nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev:/nix/store/bsslcbcnrfcv6nl0jfha444nxjky7zxa-zlib-1.2.13-dev:/nix/store/4xqki8nyafl26w2p71w988djvfmfz4x1-zlib-1.2.13:/nix/store/l7c92rkjf863an5swav4110qrkis73hk-libffi-3.4.4-dev:/nix/store/iarp5ija5frd4cj237lw8y0lir4l8b4f-libffi-3.4.4:/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21:/nix/store/fs78ayawqsacvrw1lbn7wq63x5av6gr0-glibc-iconv-2.35:/nix/store/h4wpa1lxg3csc9y6vymii8xaipqydi1q-glib-2.74.3-bin:/nix/store/li6g1fg7l45c2fq8kq6gfy81jm1lwla3-glib-2.74.3:/nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev:/nix/store/4nnk5spr3flhrkscdnjnizbk684w114j-at-spi2-core-2.46.0-dev:/nix/store/z72g6cbnyvr4ik19p1jmaq36iz6qh2al-at-spi2-core-2.46.0:/nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev:/nix/store/rdlzk9abm14a48amswlnkcy9p461iwn9-fontconfig-2.14.0-dev:/nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev:/nix/store/5b7fc424v8p3mskkgv221rn99gbj6iy9-bzip2-1.0.8-dev:/nix/store/k2chpzfvhd0kds4pa6r2ip7y3x6sq4px-bzip2-1.0.8-bin:/nix/store/kdz2f3z0cyx553sz9j68cbcm10xsmk45-bzip2-1.0.8:/nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev:/nix/store/q07p023whnl7xn3hncjny62g7vj4ad5q-libpng-apng-1.6.37:/nix/store/lwvv4fns4d05h22cjd9r8axblgmdcjc3-freetype-2.12.1:/nix/store/cp4j9xfqiwhli4cl79q15lgmk8j7y76n-fontconfig-2.14.0-bin:/nix/store/j9c7b5mj90jcqx328qwx9ss6llbraam3-fontconfig-2.14.0-lib:/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2:/nix/store/yvzdsyd505lnqlj68z13jql4c2hgr1j8-libXext-1.3.4-dev:/nix/store/dgfh4gqspzgn3dcbbxl8zvd8hwrq0chm-xorgproto-2021.5:/nix/store/kz2kxdqfkrm6gwir5m1iz8zc7d33q8ch-libXau-1.0.9-dev:/nix/store/1p8cxmc6zn0121aq11l6c9b52mjw1634-libXau-1.0.9:/nix/store/bc5wfm9vng74b23z528kryph1vg361d1-libXext-1.3.4:/nix/store/pyaadbqg7kalglzs2rpwchg72cvk6bxh-libXrender-0.9.10-dev:/nix/store/0d3w70qlw46swm188cm6xyklc2pk9p81-libX11-1.8.4-dev:/nix/store/wqgr8z72bhza1ffb5vzqivg85a7l5njl-libxcb-1.14-dev:/nix/store/qlvfjybj7zfd3la21av72lakd8dgakj6-libxcb-1.14:/nix/store/8849pngybhw9bxnciazr8vj1icxq7kzy-libX11-1.8.4:/nix/store/900mvpl3jn2816sj4rqkr5q7wm77np5q-libXrender-0.9.10:/nix/store/jg16yffkxbxvd3pwp9s85fzy7bnyv67z-xcb-util-0.4.0-dev:/nix/store/mlc9kysnjmbqy3br03h3p4qdrjyzb4rp-xcb-util-0.4.0:/nix/store/6xf7yvkjjcwnpv5v0pq3qg9p3ynmzi8l-libGL-1.5.0-dev:/nix/store/6ysdnx59r6idn6hqsma31fd9nch3bbhc-libGL-1.5.0:/nix/store/6qrsxnflfyr7g50m2y4f9r92fm076yxq-libglvnd-1.5.0:/nix/store/mipiv1dlvmb3vyh7asyqbls265g14dyw-libglvnd-1.5.0-dev:/nix/store/y29q03rbsxm5r26jmqqah7lpi3qfj8r8-cairo-1.16.0:/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12:/nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev:/nix/store/pz10fqn6ivqjvmfva3fpbm1sj1h8mppn-libtiff-4.4.0-dev:/nix/store/52mjgn5wb0qyfdzdx28k23a8q3ip2bi3-libjpeg-turbo-2.1.4-dev:/nix/store/4bnii56y9znp80x9wx0kq8sq6s22plyi-libjpeg-turbo-2.1.4-bin:/nix/store/kgjip3sdackjknvazjrrqg1rma2z3p85-libjpeg-turbo-2.1.4:/nix/store/4mxfwln7ar5cniwzr81y3z013n3w0nhq-xz-5.2.7-dev:/nix/store/ad6v3m4l6q1nyy3j17aqi41q6v8br9hw-xz-5.2.7-bin:/nix/store/pba2y71yi3hxhn7vmab9hwsmi8a69v41-xz-5.2.7:/nix/store/glyz34sljwyb99n7pz16x72sr97zpn1p-libtiff-4.4.0-bin:/nix/store/drc7a6vnrfib5cxab962289r2i3wx0i5-libtiff-4.4.0:/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10:/nix/store/si7bwnd2p7d1bfqig9l2w1xfghl50jrm-gsettings-desktop-schemas-43.0:/nix/store/bzg5kj7nq2fvd3gf7cp56di5cqplrabb-libICE-1.0.10-dev:/nix/store/9yv535640914hhcnlc9iyzmq4n8bb2sa-libICE-1.0.10:/nix/store/iz3v8b4l7s9ddfq9l6slx2plw5kqxy6j-libSM-1.2.3-dev:/nix/store/gdz6vb8h6sh3ggscnrps6arqip3mq69w-libSM-1.2.3:/nix/store/6g4w9rfb52f47pfnv8g35is3m526vdv0-libXcomposite-0.4.5-dev:/nix/store/r5c881pxp69as01yiw0jh10y4d35cmbh-libXfixes-6.0.0-dev:/nix/store/1ih4f54i0i0hkb1rwzywxfdm25jfrrb8-libXfixes-6.0.0:/nix/store/3i0givqr6d7w5c706f32rby4c9zws1ii-libXcomposite-0.4.5:/nix/store/26p0j8gbl2m78mqksk8rh9dari7sbviq-libXcursor-1.2.0-dev:/nix/store/c7bcn6jr82bnfwl6nrlvspj2ysj8si1j-libXcursor-1.2.0:/nix/store/5ai194payhqhmxz6x12g0h16h6b0frx7-libXdamage-1.1.5-dev:/nix/store/j922381s593yyshcdk4hnvx8wivvbgfr-libXdamage-1.1.5:/nix/store/2r9cvz2v524rjcmmp26043ms7s3dnmrc-libXi-1.8-dev:/nix/store/1sxbhkma4bdkxwnl90vmh8z6lpfank95-libXi-1.8:/nix/store/gani2rj9vbg126dxyjb940pvw4bqrxn3-libXrandr-1.5.2-dev:/nix/store/3rpbhbnhkqm22cs12ka8zll3bq3m5h5d-libXrandr-1.5.2:/nix/store/naw9z8ppdi1sv23bkzw8lrq3hh0hlq6j-pango-1.50.12-dev:/nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev:/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14:/nix/store/r7hl9pcjr94xv2y7sc7bwl0cr6yvkvi9-harfbuzz-5.2.0:/nix/store/cxnv2w7saywi1yrca9yrvf0735i5is23-libXft-2.3.6-dev:/nix/store/fiiyix63nzqg7nqpxi7cnm1dva03c955-libXft-2.3.6:/nix/store/jgnmdd405kyasw44piz30kc4z121rs8x-pango-1.50.12-bin:/nix/store/lzy87jr1rg06kh89q49p4hsf6ngqnh7k-pango-1.50.12:/nix/store/asj7vmsvcfk49cx21ayxllha2ib28a5i-wayland-1.21.0-dev:/nix/store/m3w84izbv368zcn1cs32gaphwsqisyqk-wayland-1.21.0-bin:/nix/store/i1nlwakpsjx90b5274zbz4gsfc0dd3lw-wayland-1.21.0:/nix/store/2rs9n7xyn8hbic1311i6vi5hza4mcrl0-wayland-protocols-1.27:/nix/store/301p8a3ma4css4jbxyh5qqplsppglvf4-libXinerama-1.1.4-dev:/nix/store/i68jz10hjlzbbjasi4wgh2i0hi5s3gvr-libXinerama-1.1.4:/nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev:/nix/store/r8b24303nrxssliqxqa8nhhjd1brnnhs-gmp-with-cxx-6.2.1-dev:/nix/store/qa8wjyjm791632xsm8pzvp0v00m90yxw-gmp-with-cxx-6.2.1:/nix/store/wb4m1f6ywhzmvfpdwinbfpnpj8i4lvzn-cups-2.4.2-lib:/nix/store/642shi3xqc38giyywpmczgm5mwjxvnba-cups-2.4.2:/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35:/nix/store/qyv1mx1dniw6675wmx73iy311j7scpa7-libsoup-2.74.3-dev:/nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev:/nix/store/zcpkmxpig5vv5g5nd00nkd64pk7pgbf1-hook:/nix/store/pwjclncq1z5ps46z4rnnf4v98r6zfnfr-libxml2-2.10.3-bin:/nix/store/s5qp4yyysx3ylafw7ia2mlvybmg77ys7-libxml2-2.10.3:/nix/store/dn8xrykgpw2hs96pw9jk3xf1zb3csr9q-libsoup-2.74.3:/nix/store/cpfhj8ipiwsf1884n0mpqgmzzfih0bfr-webkitgtk-2.38.5+abi=4.0-dev:/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0:/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31:/nix/store/ny9ppsk875nzmcwvz5wl3zkg2pxni671-tauri-1.0.5:/nix/store/5ak7x16fcph2hl3fbnv96xpg4b7q7jk4-pnpm-7.14.2'
export CMAKE_PREFIX_PATH
CONFIG_SHELL='/nix/store/cdfwlj71yd6p5bmxsk2gk9xqc0friykg-bash-5.1-p16/bin/bash'
export CONFIG_SHELL
CXX='g++'
export CXX
GDK_PIXBUF_MODULE_FILE='/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache'
export GDK_PIXBUF_MODULE_FILE
GETTEXTDATADIRS='/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/share/gettext:/nix/store/li6g1fg7l45c2fq8kq6gfy81jm1lwla3-glib-2.74.3/share/gettext:/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/share/gettext'
export GETTEXTDATADIRS
GSETTINGS_SCHEMAS_PATH='/nix/store/si7bwnd2p7d1bfqig9l2w1xfghl50jrm-gsettings-desktop-schemas-43.0/share/gsettings-schemas/gsettings-desktop-schemas-43.0:/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/share/gsettings-schemas/gtk+3-3.24.35'
export GSETTINGS_SCHEMAS_PATH
HOSTTYPE='x86_64'
HOST_PATH='/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef/bin:/nix/store/qbx0gskpalv09scmqk9p8iwfglxblq1h-cargo-1.64.0/bin:/nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0/bin:/nix/store/53wn361h9qz8bzq91gplym9m7fddf2va-rustfmt-1.64.0/bin:/nix/store/kmmq2lp8s34wgvz4rxyxh3vps6nzhqbh-cmake-3.24.3/bin:/nix/store/m0p2xy7km6sj75bn30j1dvrz2v83bzi9-pkg-config-wrapper-0.29.2/bin:/nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev/bin:/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib/bin:/nix/store/b1vhk5dgygzk9dmad4w7gdkbzszznwfb-dbus-1.14.4/bin:/nix/store/hpcwwg6k6hfrp1fyf3vc1llkkl5gf3vv-openssl-3.0.8-bin/bin:/nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev/bin:/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/bin:/nix/store/h4wpa1lxg3csc9y6vymii8xaipqydi1q-glib-2.74.3-bin/bin:/nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev/bin:/nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev/bin:/nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev/bin:/nix/store/k2chpzfvhd0kds4pa6r2ip7y3x6sq4px-bzip2-1.0.8-bin/bin:/nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev/bin:/nix/store/cp4j9xfqiwhli4cl79q15lgmk8j7y76n-fontconfig-2.14.0-bin/bin:/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/bin:/nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev/bin:/nix/store/4bnii56y9znp80x9wx0kq8sq6s22plyi-libjpeg-turbo-2.1.4-bin/bin:/nix/store/ad6v3m4l6q1nyy3j17aqi41q6v8br9hw-xz-5.2.7-bin/bin:/nix/store/glyz34sljwyb99n7pz16x72sr97zpn1p-libtiff-4.4.0-bin/bin:/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10/bin:/nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev/bin:/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/bin:/nix/store/jgnmdd405kyasw44piz30kc4z121rs8x-pango-1.50.12-bin/bin:/nix/store/m3w84izbv368zcn1cs32gaphwsqisyqk-wayland-1.21.0-bin/bin:/nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev/bin:/nix/store/642shi3xqc38giyywpmczgm5mwjxvnba-cups-2.4.2/bin:/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/bin:/nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev/bin:/nix/store/pwjclncq1z5ps46z4rnnf4v98r6zfnfr-libxml2-2.10.3-bin/bin:/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0/bin:/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/bin:/nix/store/ny9ppsk875nzmcwvz5wl3zkg2pxni671-tauri-1.0.5/bin:/nix/store/5ak7x16fcph2hl3fbnv96xpg4b7q7jk4-pnpm-7.14.2/bin:/nix/store/98rnm10cy6liayss4gbhksmpvmykl6kd-coreutils-9.1/bin:/nix/store/8p49h8m12hx1qjxgw98vrx17a6hxcn2z-findutils-4.9.0/bin:/nix/store/526xlkd8f2q5vbdy68rnv4x5d0wzml8w-diffutils-3.8/bin:/nix/store/slh364pwxi19dswf6ya6hr3gaa0dms54-gnused-4.8/bin:/nix/store/lwwrn8258085lr6qjdcx91sy0bsd6r7y-gnugrep-3.7/bin:/nix/store/qs14qs0x86ibndw0j5mwf1v46jxn56ld-gawk-5.1.1/bin:/nix/store/6fchhprf5alp9p3zw7m12wry4i72ghlx-gnutar-1.34/bin:/nix/store/sqad84iqjlnf0cy5ymlkl5bv7h32wn0w-gzip-1.12/bin:/nix/store/k2chpzfvhd0kds4pa6r2ip7y3x6sq4px-bzip2-1.0.8-bin/bin:/nix/store/hnwgz78qripqnnnprar3lzmp7ymkv90x-gnumake-4.3/bin:/nix/store/cdfwlj71yd6p5bmxsk2gk9xqc0friykg-bash-5.1-p16/bin:/nix/store/gjyskq701gwzpin34r3rqlcaqif7v3l6-patch-2.7.6/bin:/nix/store/ad6v3m4l6q1nyy3j17aqi41q6v8br9hw-xz-5.2.7-bin/bin:/nix/store/576iqyz893c8zg0qy92is04cgcjanqky-file-5.43/bin'
export HOST_PATH
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LD='ld'
export LD
LINENO='76'
MACHTYPE='x86_64-pc-linux-gnu'
NIX_BINTOOLS='/nix/store/lxgn5spk779wflksgibx4jv4n10w6x71-binutils-wrapper-2.39'
export NIX_BINTOOLS
NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu='1'
export NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu
NIX_BUILD_CORES='16'
export NIX_BUILD_CORES
NIX_CC='/nix/store/9nj6qjqp0d25giirzj9f0k35g2s58g0h-gcc-wrapper-11.3.0'
export NIX_CC
NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu='1'
export NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu
NIX_CFLAGS_COMPILE=' -frandom-seed=3gaw212kmq -isystem /nix/store/bc39j9xykzijxcz6q74zqihi31qhhym6-dbus-1.14.4-dev/include -isystem /nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev/include -isystem /nix/store/gz31hsi6hdf0a2xzsznwfmv7vdw4ahcn-openssl-3.0.8-dev/include -isystem /nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev/include -isystem /nix/store/bsslcbcnrfcv6nl0jfha444nxjky7zxa-zlib-1.2.13-dev/include -isystem /nix/store/l7c92rkjf863an5swav4110qrkis73hk-libffi-3.4.4-dev/include -isystem /nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/include -isystem /nix/store/fs78ayawqsacvrw1lbn7wq63x5av6gr0-glibc-iconv-2.35/include -isystem /nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev/include -isystem /nix/store/4nnk5spr3flhrkscdnjnizbk684w114j-at-spi2-core-2.46.0-dev/include -isystem /nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev/include -isystem /nix/store/rdlzk9abm14a48amswlnkcy9p461iwn9-fontconfig-2.14.0-dev/include -isystem /nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev/include -isystem /nix/store/5b7fc424v8p3mskkgv221rn99gbj6iy9-bzip2-1.0.8-dev/include -isystem /nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev/include -isystem /nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/include -isystem /nix/store/yvzdsyd505lnqlj68z13jql4c2hgr1j8-libXext-1.3.4-dev/include -isystem /nix/store/dgfh4gqspzgn3dcbbxl8zvd8hwrq0chm-xorgproto-2021.5/include -isystem /nix/store/kz2kxdqfkrm6gwir5m1iz8zc7d33q8ch-libXau-1.0.9-dev/include -isystem /nix/store/pyaadbqg7kalglzs2rpwchg72cvk6bxh-libXrender-0.9.10-dev/include -isystem /nix/store/0d3w70qlw46swm188cm6xyklc2pk9p81-libX11-1.8.4-dev/include -isystem /nix/store/wqgr8z72bhza1ffb5vzqivg85a7l5njl-libxcb-1.14-dev/include -isystem /nix/store/jg16yffkxbxvd3pwp9s85fzy7bnyv67z-xcb-util-0.4.0-dev/include -isystem /nix/store/6xf7yvkjjcwnpv5v0pq3qg9p3ynmzi8l-libGL-1.5.0-dev/include -isystem /nix/store/mipiv1dlvmb3vyh7asyqbls265g14dyw-libglvnd-1.5.0-dev/include -isystem /nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/include -isystem /nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev/include -isystem /nix/store/pz10fqn6ivqjvmfva3fpbm1sj1h8mppn-libtiff-4.4.0-dev/include -isystem /nix/store/52mjgn5wb0qyfdzdx28k23a8q3ip2bi3-libjpeg-turbo-2.1.4-dev/include -isystem /nix/store/4mxfwln7ar5cniwzr81y3z013n3w0nhq-xz-5.2.7-dev/include -isystem /nix/store/si7bwnd2p7d1bfqig9l2w1xfghl50jrm-gsettings-desktop-schemas-43.0/include -isystem /nix/store/bzg5kj7nq2fvd3gf7cp56di5cqplrabb-libICE-1.0.10-dev/include -isystem /nix/store/iz3v8b4l7s9ddfq9l6slx2plw5kqxy6j-libSM-1.2.3-dev/include -isystem /nix/store/6g4w9rfb52f47pfnv8g35is3m526vdv0-libXcomposite-0.4.5-dev/include -isystem /nix/store/r5c881pxp69as01yiw0jh10y4d35cmbh-libXfixes-6.0.0-dev/include -isystem /nix/store/26p0j8gbl2m78mqksk8rh9dari7sbviq-libXcursor-1.2.0-dev/include -isystem /nix/store/5ai194payhqhmxz6x12g0h16h6b0frx7-libXdamage-1.1.5-dev/include -isystem /nix/store/2r9cvz2v524rjcmmp26043ms7s3dnmrc-libXi-1.8-dev/include -isystem /nix/store/gani2rj9vbg126dxyjb940pvw4bqrxn3-libXrandr-1.5.2-dev/include -isystem /nix/store/naw9z8ppdi1sv23bkzw8lrq3hh0hlq6j-pango-1.50.12-dev/include -isystem /nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev/include -isystem /nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/include -isystem /nix/store/cxnv2w7saywi1yrca9yrvf0735i5is23-libXft-2.3.6-dev/include -isystem /nix/store/asj7vmsvcfk49cx21ayxllha2ib28a5i-wayland-1.21.0-dev/include -isystem /nix/store/301p8a3ma4css4jbxyh5qqplsppglvf4-libXinerama-1.1.4-dev/include -isystem /nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev/include -isystem /nix/store/r8b24303nrxssliqxqa8nhhjd1brnnhs-gmp-with-cxx-6.2.1-dev/include -isystem /nix/store/qyv1mx1dniw6675wmx73iy311j7scpa7-libsoup-2.74.3-dev/include -isystem /nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev/include -isystem /nix/store/cpfhj8ipiwsf1884n0mpqgmzzfih0bfr-webkitgtk-2.38.5+abi=4.0-dev/include -isystem /nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/include -isystem /nix/store/bc39j9xykzijxcz6q74zqihi31qhhym6-dbus-1.14.4-dev/include -isystem /nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev/include -isystem /nix/store/gz31hsi6hdf0a2xzsznwfmv7vdw4ahcn-openssl-3.0.8-dev/include -isystem /nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev/include -isystem /nix/store/bsslcbcnrfcv6nl0jfha444nxjky7zxa-zlib-1.2.13-dev/include -isystem /nix/store/l7c92rkjf863an5swav4110qrkis73hk-libffi-3.4.4-dev/include -isystem /nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/include -isystem /nix/store/fs78ayawqsacvrw1lbn7wq63x5av6gr0-glibc-iconv-2.35/include -isystem /nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev/include -isystem /nix/store/4nnk5spr3flhrkscdnjnizbk684w114j-at-spi2-core-2.46.0-dev/include -isystem /nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev/include -isystem /nix/store/rdlzk9abm14a48amswlnkcy9p461iwn9-fontconfig-2.14.0-dev/include -isystem /nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev/include -isystem /nix/store/5b7fc424v8p3mskkgv221rn99gbj6iy9-bzip2-1.0.8-dev/include -isystem /nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev/include -isystem /nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/include -isystem /nix/store/yvzdsyd505lnqlj68z13jql4c2hgr1j8-libXext-1.3.4-dev/include -isystem /nix/store/dgfh4gqspzgn3dcbbxl8zvd8hwrq0chm-xorgproto-2021.5/include -isystem /nix/store/kz2kxdqfkrm6gwir5m1iz8zc7d33q8ch-libXau-1.0.9-dev/include -isystem /nix/store/pyaadbqg7kalglzs2rpwchg72cvk6bxh-libXrender-0.9.10-dev/include -isystem /nix/store/0d3w70qlw46swm188cm6xyklc2pk9p81-libX11-1.8.4-dev/include -isystem /nix/store/wqgr8z72bhza1ffb5vzqivg85a7l5njl-libxcb-1.14-dev/include -isystem /nix/store/jg16yffkxbxvd3pwp9s85fzy7bnyv67z-xcb-util-0.4.0-dev/include -isystem /nix/store/6xf7yvkjjcwnpv5v0pq3qg9p3ynmzi8l-libGL-1.5.0-dev/include -isystem /nix/store/mipiv1dlvmb3vyh7asyqbls265g14dyw-libglvnd-1.5.0-dev/include -isystem /nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/include -isystem /nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev/include -isystem /nix/store/pz10fqn6ivqjvmfva3fpbm1sj1h8mppn-libtiff-4.4.0-dev/include -isystem /nix/store/52mjgn5wb0qyfdzdx28k23a8q3ip2bi3-libjpeg-turbo-2.1.4-dev/include -isystem /nix/store/4mxfwln7ar5cniwzr81y3z013n3w0nhq-xz-5.2.7-dev/include -isystem /nix/store/si7bwnd2p7d1bfqig9l2w1xfghl50jrm-gsettings-desktop-schemas-43.0/include -isystem /nix/store/bzg5kj7nq2fvd3gf7cp56di5cqplrabb-libICE-1.0.10-dev/include -isystem /nix/store/iz3v8b4l7s9ddfq9l6slx2plw5kqxy6j-libSM-1.2.3-dev/include -isystem /nix/store/6g4w9rfb52f47pfnv8g35is3m526vdv0-libXcomposite-0.4.5-dev/include -isystem /nix/store/r5c881pxp69as01yiw0jh10y4d35cmbh-libXfixes-6.0.0-dev/include -isystem /nix/store/26p0j8gbl2m78mqksk8rh9dari7sbviq-libXcursor-1.2.0-dev/include -isystem /nix/store/5ai194payhqhmxz6x12g0h16h6b0frx7-libXdamage-1.1.5-dev/include -isystem /nix/store/2r9cvz2v524rjcmmp26043ms7s3dnmrc-libXi-1.8-dev/include -isystem /nix/store/gani2rj9vbg126dxyjb940pvw4bqrxn3-libXrandr-1.5.2-dev/include -isystem /nix/store/naw9z8ppdi1sv23bkzw8lrq3hh0hlq6j-pango-1.50.12-dev/include -isystem /nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev/include -isystem /nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/include -isystem /nix/store/cxnv2w7saywi1yrca9yrvf0735i5is23-libXft-2.3.6-dev/include -isystem /nix/store/asj7vmsvcfk49cx21ayxllha2ib28a5i-wayland-1.21.0-dev/include -isystem /nix/store/301p8a3ma4css4jbxyh5qqplsppglvf4-libXinerama-1.1.4-dev/include -isystem /nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev/include -isystem /nix/store/r8b24303nrxssliqxqa8nhhjd1brnnhs-gmp-with-cxx-6.2.1-dev/include -isystem /nix/store/qyv1mx1dniw6675wmx73iy311j7scpa7-libsoup-2.74.3-dev/include -isystem /nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev/include -isystem /nix/store/cpfhj8ipiwsf1884n0mpqgmzzfih0bfr-webkitgtk-2.38.5+abi=4.0-dev/include -isystem /nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/include'
export NIX_CFLAGS_COMPILE
NIX_ENFORCE_NO_NATIVE='1'
export NIX_ENFORCE_NO_NATIVE
NIX_HARDENING_ENABLE='fortify stackprotector pic strictoverflow format relro bindnow'
export NIX_HARDENING_ENABLE
NIX_INDENT_MAKE='1'
export NIX_INDENT_MAKE
NIX_LDFLAGS='-rpath /home/curiouslad/RustProjects/yamcl/outputs/out/lib64 -rpath /home/curiouslad/RustProjects/yamcl/outputs/out/lib  -L/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef/lib -L/nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0/lib -L/nix/store/yi2kw56ix8fdwjzd089zqdly102n1f95-expat-2.5.0/lib -L/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib/lib -L/nix/store/np58sm45gngld2nnqjq6p532j3v2kbfl-openssl-3.0.8/lib -L/nix/store/4xqki8nyafl26w2p71w988djvfmfz4x1-zlib-1.2.13/lib -L/nix/store/iarp5ija5frd4cj237lw8y0lir4l8b4f-libffi-3.4.4/lib -L/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/lib -L/nix/store/li6g1fg7l45c2fq8kq6gfy81jm1lwla3-glib-2.74.3/lib -L/nix/store/z72g6cbnyvr4ik19p1jmaq36iz6qh2al-at-spi2-core-2.46.0/lib -L/nix/store/kdz2f3z0cyx553sz9j68cbcm10xsmk45-bzip2-1.0.8/lib -L/nix/store/q07p023whnl7xn3hncjny62g7vj4ad5q-libpng-apng-1.6.37/lib -L/nix/store/lwvv4fns4d05h22cjd9r8axblgmdcjc3-freetype-2.12.1/lib -L/nix/store/j9c7b5mj90jcqx328qwx9ss6llbraam3-fontconfig-2.14.0-lib/lib -L/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/lib -L/nix/store/1p8cxmc6zn0121aq11l6c9b52mjw1634-libXau-1.0.9/lib -L/nix/store/bc5wfm9vng74b23z528kryph1vg361d1-libXext-1.3.4/lib -L/nix/store/qlvfjybj7zfd3la21av72lakd8dgakj6-libxcb-1.14/lib -L/nix/store/8849pngybhw9bxnciazr8vj1icxq7kzy-libX11-1.8.4/lib -L/nix/store/900mvpl3jn2816sj4rqkr5q7wm77np5q-libXrender-0.9.10/lib -L/nix/store/mlc9kysnjmbqy3br03h3p4qdrjyzb4rp-xcb-util-0.4.0/lib -L/nix/store/6ysdnx59r6idn6hqsma31fd9nch3bbhc-libGL-1.5.0/lib -L/nix/store/6qrsxnflfyr7g50m2y4f9r92fm076yxq-libglvnd-1.5.0/lib -L/nix/store/y29q03rbsxm5r26jmqqah7lpi3qfj8r8-cairo-1.16.0/lib -L/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/lib -L/nix/store/kgjip3sdackjknvazjrrqg1rma2z3p85-libjpeg-turbo-2.1.4/lib -L/nix/store/pba2y71yi3hxhn7vmab9hwsmi8a69v41-xz-5.2.7/lib -L/nix/store/drc7a6vnrfib5cxab962289r2i3wx0i5-libtiff-4.4.0/lib -L/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10/lib -L/nix/store/9yv535640914hhcnlc9iyzmq4n8bb2sa-libICE-1.0.10/lib -L/nix/store/gdz6vb8h6sh3ggscnrps6arqip3mq69w-libSM-1.2.3/lib -L/nix/store/1ih4f54i0i0hkb1rwzywxfdm25jfrrb8-libXfixes-6.0.0/lib -L/nix/store/3i0givqr6d7w5c706f32rby4c9zws1ii-libXcomposite-0.4.5/lib -L/nix/store/c7bcn6jr82bnfwl6nrlvspj2ysj8si1j-libXcursor-1.2.0/lib -L/nix/store/j922381s593yyshcdk4hnvx8wivvbgfr-libXdamage-1.1.5/lib -L/nix/store/1sxbhkma4bdkxwnl90vmh8z6lpfank95-libXi-1.8/lib -L/nix/store/3rpbhbnhkqm22cs12ka8zll3bq3m5h5d-libXrandr-1.5.2/lib -L/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/lib -L/nix/store/r7hl9pcjr94xv2y7sc7bwl0cr6yvkvi9-harfbuzz-5.2.0/lib -L/nix/store/fiiyix63nzqg7nqpxi7cnm1dva03c955-libXft-2.3.6/lib -L/nix/store/lzy87jr1rg06kh89q49p4hsf6ngqnh7k-pango-1.50.12/lib -L/nix/store/i1nlwakpsjx90b5274zbz4gsfc0dd3lw-wayland-1.21.0/lib -L/nix/store/i68jz10hjlzbbjasi4wgh2i0hi5s3gvr-libXinerama-1.1.4/lib -L/nix/store/qa8wjyjm791632xsm8pzvp0v00m90yxw-gmp-with-cxx-6.2.1/lib -L/nix/store/wb4m1f6ywhzmvfpdwinbfpnpj8i4lvzn-cups-2.4.2-lib/lib -L/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/lib -L/nix/store/s5qp4yyysx3ylafw7ia2mlvybmg77ys7-libxml2-2.10.3/lib -L/nix/store/dn8xrykgpw2hs96pw9jk3xf1zb3csr9q-libsoup-2.74.3/lib -L/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0/lib -L/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/lib -L/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef/lib -L/nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0/lib -L/nix/store/yi2kw56ix8fdwjzd089zqdly102n1f95-expat-2.5.0/lib -L/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib/lib -L/nix/store/np58sm45gngld2nnqjq6p532j3v2kbfl-openssl-3.0.8/lib -L/nix/store/4xqki8nyafl26w2p71w988djvfmfz4x1-zlib-1.2.13/lib -L/nix/store/iarp5ija5frd4cj237lw8y0lir4l8b4f-libffi-3.4.4/lib -L/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/lib -L/nix/store/li6g1fg7l45c2fq8kq6gfy81jm1lwla3-glib-2.74.3/lib -L/nix/store/z72g6cbnyvr4ik19p1jmaq36iz6qh2al-at-spi2-core-2.46.0/lib -L/nix/store/kdz2f3z0cyx553sz9j68cbcm10xsmk45-bzip2-1.0.8/lib -L/nix/store/q07p023whnl7xn3hncjny62g7vj4ad5q-libpng-apng-1.6.37/lib -L/nix/store/lwvv4fns4d05h22cjd9r8axblgmdcjc3-freetype-2.12.1/lib -L/nix/store/j9c7b5mj90jcqx328qwx9ss6llbraam3-fontconfig-2.14.0-lib/lib -L/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/lib -L/nix/store/1p8cxmc6zn0121aq11l6c9b52mjw1634-libXau-1.0.9/lib -L/nix/store/bc5wfm9vng74b23z528kryph1vg361d1-libXext-1.3.4/lib -L/nix/store/qlvfjybj7zfd3la21av72lakd8dgakj6-libxcb-1.14/lib -L/nix/store/8849pngybhw9bxnciazr8vj1icxq7kzy-libX11-1.8.4/lib -L/nix/store/900mvpl3jn2816sj4rqkr5q7wm77np5q-libXrender-0.9.10/lib -L/nix/store/mlc9kysnjmbqy3br03h3p4qdrjyzb4rp-xcb-util-0.4.0/lib -L/nix/store/6ysdnx59r6idn6hqsma31fd9nch3bbhc-libGL-1.5.0/lib -L/nix/store/6qrsxnflfyr7g50m2y4f9r92fm076yxq-libglvnd-1.5.0/lib -L/nix/store/y29q03rbsxm5r26jmqqah7lpi3qfj8r8-cairo-1.16.0/lib -L/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/lib -L/nix/store/kgjip3sdackjknvazjrrqg1rma2z3p85-libjpeg-turbo-2.1.4/lib -L/nix/store/pba2y71yi3hxhn7vmab9hwsmi8a69v41-xz-5.2.7/lib -L/nix/store/drc7a6vnrfib5cxab962289r2i3wx0i5-libtiff-4.4.0/lib -L/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10/lib -L/nix/store/9yv535640914hhcnlc9iyzmq4n8bb2sa-libICE-1.0.10/lib -L/nix/store/gdz6vb8h6sh3ggscnrps6arqip3mq69w-libSM-1.2.3/lib -L/nix/store/1ih4f54i0i0hkb1rwzywxfdm25jfrrb8-libXfixes-6.0.0/lib -L/nix/store/3i0givqr6d7w5c706f32rby4c9zws1ii-libXcomposite-0.4.5/lib -L/nix/store/c7bcn6jr82bnfwl6nrlvspj2ysj8si1j-libXcursor-1.2.0/lib -L/nix/store/j922381s593yyshcdk4hnvx8wivvbgfr-libXdamage-1.1.5/lib -L/nix/store/1sxbhkma4bdkxwnl90vmh8z6lpfank95-libXi-1.8/lib -L/nix/store/3rpbhbnhkqm22cs12ka8zll3bq3m5h5d-libXrandr-1.5.2/lib -L/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/lib -L/nix/store/r7hl9pcjr94xv2y7sc7bwl0cr6yvkvi9-harfbuzz-5.2.0/lib -L/nix/store/fiiyix63nzqg7nqpxi7cnm1dva03c955-libXft-2.3.6/lib -L/nix/store/lzy87jr1rg06kh89q49p4hsf6ngqnh7k-pango-1.50.12/lib -L/nix/store/i1nlwakpsjx90b5274zbz4gsfc0dd3lw-wayland-1.21.0/lib -L/nix/store/i68jz10hjlzbbjasi4wgh2i0hi5s3gvr-libXinerama-1.1.4/lib -L/nix/store/qa8wjyjm791632xsm8pzvp0v00m90yxw-gmp-with-cxx-6.2.1/lib -L/nix/store/wb4m1f6ywhzmvfpdwinbfpnpj8i4lvzn-cups-2.4.2-lib/lib -L/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/lib -L/nix/store/s5qp4yyysx3ylafw7ia2mlvybmg77ys7-libxml2-2.10.3/lib -L/nix/store/dn8xrykgpw2hs96pw9jk3xf1zb3csr9q-libsoup-2.74.3/lib -L/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0/lib -L/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/lib'
export NIX_LDFLAGS
NIX_LIB64_IN_SELF_RPATH='1'
NIX_NO_SELF_RPATH='1'
NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu='1'
export NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu
NIX_STORE='/nix/store'
export NIX_STORE
NM='nm'
export NM
OBJCOPY='objcopy'
export OBJCOPY
OBJDUMP='objdump'
export OBJDUMP
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='linux-gnu'
PATH='/nix/store/qbbh33w8jwr1pb6vxp2aplcsdlj6hvvk-patchelf-0.15.0/bin:/nix/store/9nj6qjqp0d25giirzj9f0k35g2s58g0h-gcc-wrapper-11.3.0/bin:/nix/store/gwm7zfz09wibym9hiqckdjj1dndzbmi0-gcc-11.3.0/bin:/nix/store/k7hz7q51yn77j70i2kjrc9rgnik4yqgk-glibc-2.35-224-bin/bin:/nix/store/98rnm10cy6liayss4gbhksmpvmykl6kd-coreutils-9.1/bin:/nix/store/lxgn5spk779wflksgibx4jv4n10w6x71-binutils-wrapper-2.39/bin:/nix/store/y5jcw4ymq7qi735wbm7va9yw3nj2qpb9-binutils-2.39/bin:/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef/bin:/nix/store/qbx0gskpalv09scmqk9p8iwfglxblq1h-cargo-1.64.0/bin:/nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0/bin:/nix/store/53wn361h9qz8bzq91gplym9m7fddf2va-rustfmt-1.64.0/bin:/nix/store/kmmq2lp8s34wgvz4rxyxh3vps6nzhqbh-cmake-3.24.3/bin:/nix/store/m0p2xy7km6sj75bn30j1dvrz2v83bzi9-pkg-config-wrapper-0.29.2/bin:/nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev/bin:/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib/bin:/nix/store/b1vhk5dgygzk9dmad4w7gdkbzszznwfb-dbus-1.14.4/bin:/nix/store/hpcwwg6k6hfrp1fyf3vc1llkkl5gf3vv-openssl-3.0.8-bin/bin:/nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev/bin:/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21/bin:/nix/store/h4wpa1lxg3csc9y6vymii8xaipqydi1q-glib-2.74.3-bin/bin:/nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev/bin:/nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev/bin:/nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev/bin:/nix/store/k2chpzfvhd0kds4pa6r2ip7y3x6sq4px-bzip2-1.0.8-bin/bin:/nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev/bin:/nix/store/cp4j9xfqiwhli4cl79q15lgmk8j7y76n-fontconfig-2.14.0-bin/bin:/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/bin:/nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev/bin:/nix/store/4bnii56y9znp80x9wx0kq8sq6s22plyi-libjpeg-turbo-2.1.4-bin/bin:/nix/store/ad6v3m4l6q1nyy3j17aqi41q6v8br9hw-xz-5.2.7-bin/bin:/nix/store/glyz34sljwyb99n7pz16x72sr97zpn1p-libtiff-4.4.0-bin/bin:/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10/bin:/nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev/bin:/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/bin:/nix/store/jgnmdd405kyasw44piz30kc4z121rs8x-pango-1.50.12-bin/bin:/nix/store/m3w84izbv368zcn1cs32gaphwsqisyqk-wayland-1.21.0-bin/bin:/nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev/bin:/nix/store/642shi3xqc38giyywpmczgm5mwjxvnba-cups-2.4.2/bin:/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/bin:/nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev/bin:/nix/store/pwjclncq1z5ps46z4rnnf4v98r6zfnfr-libxml2-2.10.3-bin/bin:/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0/bin:/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/bin:/nix/store/ny9ppsk875nzmcwvz5wl3zkg2pxni671-tauri-1.0.5/bin:/nix/store/5ak7x16fcph2hl3fbnv96xpg4b7q7jk4-pnpm-7.14.2/bin:/nix/store/98rnm10cy6liayss4gbhksmpvmykl6kd-coreutils-9.1/bin:/nix/store/8p49h8m12hx1qjxgw98vrx17a6hxcn2z-findutils-4.9.0/bin:/nix/store/526xlkd8f2q5vbdy68rnv4x5d0wzml8w-diffutils-3.8/bin:/nix/store/slh364pwxi19dswf6ya6hr3gaa0dms54-gnused-4.8/bin:/nix/store/lwwrn8258085lr6qjdcx91sy0bsd6r7y-gnugrep-3.7/bin:/nix/store/qs14qs0x86ibndw0j5mwf1v46jxn56ld-gawk-5.1.1/bin:/nix/store/6fchhprf5alp9p3zw7m12wry4i72ghlx-gnutar-1.34/bin:/nix/store/sqad84iqjlnf0cy5ymlkl5bv7h32wn0w-gzip-1.12/bin:/nix/store/k2chpzfvhd0kds4pa6r2ip7y3x6sq4px-bzip2-1.0.8-bin/bin:/nix/store/hnwgz78qripqnnnprar3lzmp7ymkv90x-gnumake-4.3/bin:/nix/store/cdfwlj71yd6p5bmxsk2gk9xqc0friykg-bash-5.1-p16/bin:/nix/store/gjyskq701gwzpin34r3rqlcaqif7v3l6-patch-2.7.6/bin:/nix/store/ad6v3m4l6q1nyy3j17aqi41q6v8br9hw-xz-5.2.7-bin/bin:/nix/store/576iqyz893c8zg0qy92is04cgcjanqky-file-5.43/bin'
export PATH
PKG_CONFIG_FOR_TARGET='pkg-config'
export PKG_CONFIG_FOR_TARGET
PKG_CONFIG_PATH_FOR_TARGET='/nix/store/bc39j9xykzijxcz6q74zqihi31qhhym6-dbus-1.14.4-dev/lib/pkgconfig:/nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev/lib/pkgconfig:/nix/store/gz31hsi6hdf0a2xzsznwfmv7vdw4ahcn-openssl-3.0.8-dev/lib/pkgconfig:/nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev/lib/pkgconfig:/nix/store/bsslcbcnrfcv6nl0jfha444nxjky7zxa-zlib-1.2.13-dev/lib/pkgconfig:/nix/store/l7c92rkjf863an5swav4110qrkis73hk-libffi-3.4.4-dev/lib/pkgconfig:/nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev/lib/pkgconfig:/nix/store/4nnk5spr3flhrkscdnjnizbk684w114j-at-spi2-core-2.46.0-dev/lib/pkgconfig:/nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev/lib/pkgconfig:/nix/store/rdlzk9abm14a48amswlnkcy9p461iwn9-fontconfig-2.14.0-dev/lib/pkgconfig:/nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev/lib/pkgconfig:/nix/store/5b7fc424v8p3mskkgv221rn99gbj6iy9-bzip2-1.0.8-dev/lib/pkgconfig:/nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev/lib/pkgconfig:/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2/lib/pkgconfig:/nix/store/yvzdsyd505lnqlj68z13jql4c2hgr1j8-libXext-1.3.4-dev/lib/pkgconfig:/nix/store/dgfh4gqspzgn3dcbbxl8zvd8hwrq0chm-xorgproto-2021.5/share/pkgconfig:/nix/store/kz2kxdqfkrm6gwir5m1iz8zc7d33q8ch-libXau-1.0.9-dev/lib/pkgconfig:/nix/store/pyaadbqg7kalglzs2rpwchg72cvk6bxh-libXrender-0.9.10-dev/lib/pkgconfig:/nix/store/0d3w70qlw46swm188cm6xyklc2pk9p81-libX11-1.8.4-dev/lib/pkgconfig:/nix/store/wqgr8z72bhza1ffb5vzqivg85a7l5njl-libxcb-1.14-dev/lib/pkgconfig:/nix/store/jg16yffkxbxvd3pwp9s85fzy7bnyv67z-xcb-util-0.4.0-dev/lib/pkgconfig:/nix/store/6xf7yvkjjcwnpv5v0pq3qg9p3ynmzi8l-libGL-1.5.0-dev/lib/pkgconfig:/nix/store/mipiv1dlvmb3vyh7asyqbls265g14dyw-libglvnd-1.5.0-dev/lib/pkgconfig:/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12/lib/pkgconfig:/nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev/lib/pkgconfig:/nix/store/pz10fqn6ivqjvmfva3fpbm1sj1h8mppn-libtiff-4.4.0-dev/lib/pkgconfig:/nix/store/52mjgn5wb0qyfdzdx28k23a8q3ip2bi3-libjpeg-turbo-2.1.4-dev/lib/pkgconfig:/nix/store/4mxfwln7ar5cniwzr81y3z013n3w0nhq-xz-5.2.7-dev/lib/pkgconfig:/nix/store/si7bwnd2p7d1bfqig9l2w1xfghl50jrm-gsettings-desktop-schemas-43.0/share/pkgconfig:/nix/store/bzg5kj7nq2fvd3gf7cp56di5cqplrabb-libICE-1.0.10-dev/lib/pkgconfig:/nix/store/iz3v8b4l7s9ddfq9l6slx2plw5kqxy6j-libSM-1.2.3-dev/lib/pkgconfig:/nix/store/6g4w9rfb52f47pfnv8g35is3m526vdv0-libXcomposite-0.4.5-dev/lib/pkgconfig:/nix/store/r5c881pxp69as01yiw0jh10y4d35cmbh-libXfixes-6.0.0-dev/lib/pkgconfig:/nix/store/26p0j8gbl2m78mqksk8rh9dari7sbviq-libXcursor-1.2.0-dev/lib/pkgconfig:/nix/store/5ai194payhqhmxz6x12g0h16h6b0frx7-libXdamage-1.1.5-dev/lib/pkgconfig:/nix/store/2r9cvz2v524rjcmmp26043ms7s3dnmrc-libXi-1.8-dev/lib/pkgconfig:/nix/store/gani2rj9vbg126dxyjb940pvw4bqrxn3-libXrandr-1.5.2-dev/lib/pkgconfig:/nix/store/naw9z8ppdi1sv23bkzw8lrq3hh0hlq6j-pango-1.50.12-dev/lib/pkgconfig:/nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev/lib/pkgconfig:/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14/lib/pkgconfig:/nix/store/cxnv2w7saywi1yrca9yrvf0735i5is23-libXft-2.3.6-dev/lib/pkgconfig:/nix/store/asj7vmsvcfk49cx21ayxllha2ib28a5i-wayland-1.21.0-dev/lib/pkgconfig:/nix/store/m3w84izbv368zcn1cs32gaphwsqisyqk-wayland-1.21.0-bin/lib/pkgconfig:/nix/store/2rs9n7xyn8hbic1311i6vi5hza4mcrl0-wayland-protocols-1.27/share/pkgconfig:/nix/store/301p8a3ma4css4jbxyh5qqplsppglvf4-libXinerama-1.1.4-dev/lib/pkgconfig:/nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev/lib/pkgconfig:/nix/store/r8b24303nrxssliqxqa8nhhjd1brnnhs-gmp-with-cxx-6.2.1-dev/lib/pkgconfig:/nix/store/qyv1mx1dniw6675wmx73iy311j7scpa7-libsoup-2.74.3-dev/lib/pkgconfig:/nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev/lib/pkgconfig:/nix/store/cpfhj8ipiwsf1884n0mpqgmzzfih0bfr-webkitgtk-2.38.5+abi=4.0-dev/lib/pkgconfig'
export PKG_CONFIG_PATH_FOR_TARGET
PS4='+ '
RANLIB='ranlib'
export RANLIB
READELF='readelf'
export READELF
SIZE='size'
export SIZE
SOURCE_DATE_EPOCH='315532800'
export SOURCE_DATE_EPOCH
STRINGS='strings'
export STRINGS
STRIP='strip'
export STRIP
XDG_DATA_DIRS='/nix/store/qbbh33w8jwr1pb6vxp2aplcsdlj6hvvk-patchelf-0.15.0/share'
export XDG_DATA_DIRS
XML_CATALOG_FILES='  /nix/store/b1vhk5dgygzk9dmad4w7gdkbzszznwfb-dbus-1.14.4/share/xml/dbus-1/catalog.xml /nix/store/b1vhk5dgygzk9dmad4w7gdkbzszznwfb-dbus-1.14.4/share/xml/dbus-1/catalog.xml'
export XML_CATALOG_FILES
buildInputs='/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef /nix/store/qbx0gskpalv09scmqk9p8iwfglxblq1h-cargo-1.64.0 /nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0 /nix/store/53wn361h9qz8bzq91gplym9m7fddf2va-rustfmt-1.64.0 /nix/store/kmmq2lp8s34wgvz4rxyxh3vps6nzhqbh-cmake-3.24.3 /nix/store/m0p2xy7km6sj75bn30j1dvrz2v83bzi9-pkg-config-wrapper-0.29.2 /nix/store/bc39j9xykzijxcz6q74zqihi31qhhym6-dbus-1.14.4-dev /nix/store/gz31hsi6hdf0a2xzsznwfmv7vdw4ahcn-openssl-3.0.8-dev /nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev /nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev /nix/store/qyv1mx1dniw6675wmx73iy311j7scpa7-libsoup-2.74.3-dev /nix/store/cpfhj8ipiwsf1884n0mpqgmzzfih0bfr-webkitgtk-2.38.5+abi=4.0-dev /nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31 /nix/store/ny9ppsk875nzmcwvz5wl3zkg2pxni671-tauri-1.0.5 /nix/store/5ak7x16fcph2hl3fbnv96xpg4b7q7jk4-pnpm-7.14.2'
export buildInputs
buildPhase='echo "------------------------------------------------------------" >>$out
echo " WARNING: the existence of this path is not guaranteed." >>$out
echo " It is an internal implementation detail for pkgs.mkShell."   >>$out
echo "------------------------------------------------------------" >>$out
echo >> $out
# Record all build inputs as runtime dependencies
export >> $out
'
export buildPhase
builder='/nix/store/cdfwlj71yd6p5bmxsk2gk9xqc0friykg-bash-5.1-p16/bin/bash'
export builder
cmakeFlags=''
export cmakeFlags
configureFlags=''
export configureFlags
configurePhase='cmakeConfigurePhase'
defaultBuildInputs=''
defaultNativeBuildInputs='/nix/store/qbbh33w8jwr1pb6vxp2aplcsdlj6hvvk-patchelf-0.15.0 /nix/store/59jmzisg8fkm9c125fw384dqq1np602l-move-docs.sh /nix/store/kxw6q8v6isaqjm702d71n2421cxamq68-make-symlinks-relative.sh /nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh /nix/store/g8xg0i02aqwhgxwd2vnp5ax3d6lrkg1v-strip.sh /nix/store/bnj8d7mvbkg3vdb07yz74yhl3g107qq5-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/8zxndz5ag0p6s526c2xyllhk1nrn4c3i-audit-tmpdir.sh /nix/store/c8n9kcdddp9np665xz6ri61b383nxvz8-move-systemd-user-units.sh /nix/store/1i5y55x4b4m9qkx5dqbmr1r6bvrqbanw-multiple-outputs.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh /nix/store/wlwcf1nw2b21m4gghj70hbg1v7x53ld8-reproducible-builds.sh /nix/store/9nj6qjqp0d25giirzj9f0k35g2s58g0h-gcc-wrapper-11.3.0'
depsBuildBuild=''
export depsBuildBuild
depsBuildBuildPropagated=''
export depsBuildBuildPropagated
depsBuildTarget=''
export depsBuildTarget
depsBuildTargetPropagated=''
export depsBuildTargetPropagated
depsHostHost=''
export depsHostHost
depsHostHostPropagated=''
export depsHostHostPropagated
depsTargetTarget=''
export depsTargetTarget
depsTargetTargetPropagated=''
export depsTargetTargetPropagated
doCheck=''
export doCheck
doInstallCheck=''
export doInstallCheck
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
declare -a envBuildBuildHooks=()
declare -a envBuildHostHooks=()
declare -a envBuildTargetHooks=()
declare -a envHostHostHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' 'gettextDataDirsHook' 'addXMLCatalogs' )
declare -a envHostTargetHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' 'gettextDataDirsHook' 'addXMLCatalogs' )
declare -a envTargetTargetHooks=('addCMakeParams' 'pkgConfigWrapper_addPkgConfigPath' 'make_glib_find_gsettings_schemas' 'findGdkPixbufLoaders' )
declare -a fixupOutputHooks=('if [ -z "${dontPatchELF-}" ]; then patchELF "$prefix"; fi' '_makeSymlinksRelative' 'if [ -z "${dontGzipMan-}" ]; then compressManPages "$prefix"; fi' '_doStrip' 'patchShebangsAuto' '_pruneLibtoolFiles' 'if [[ -z "${noAuditTmpdir-}" && -e "$prefix" ]]; then auditTmpdir "$prefix"; fi' '_moveSystemdUserUnits' '_moveSbin' '_moveLib64' '_gtkCleanImmodulesCache' )
flag='-L/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31/lib'
guess='16'
iframework_seen=''
initialPath='/nix/store/98rnm10cy6liayss4gbhksmpvmykl6kd-coreutils-9.1 /nix/store/8p49h8m12hx1qjxgw98vrx17a6hxcn2z-findutils-4.9.0 /nix/store/526xlkd8f2q5vbdy68rnv4x5d0wzml8w-diffutils-3.8 /nix/store/slh364pwxi19dswf6ya6hr3gaa0dms54-gnused-4.8 /nix/store/lwwrn8258085lr6qjdcx91sy0bsd6r7y-gnugrep-3.7 /nix/store/qs14qs0x86ibndw0j5mwf1v46jxn56ld-gawk-5.1.1 /nix/store/6fchhprf5alp9p3zw7m12wry4i72ghlx-gnutar-1.34 /nix/store/sqad84iqjlnf0cy5ymlkl5bv7h32wn0w-gzip-1.12 /nix/store/k2chpzfvhd0kds4pa6r2ip7y3x6sq4px-bzip2-1.0.8-bin /nix/store/hnwgz78qripqnnnprar3lzmp7ymkv90x-gnumake-4.3 /nix/store/cdfwlj71yd6p5bmxsk2gk9xqc0friykg-bash-5.1-p16 /nix/store/gjyskq701gwzpin34r3rqlcaqif7v3l6-patch-2.7.6 /nix/store/ad6v3m4l6q1nyy3j17aqi41q6v8br9hw-xz-5.2.7-bin /nix/store/576iqyz893c8zg0qy92is04cgcjanqky-file-5.43'
isystem_seen=''
libxmlHookDone='1'
maybe_dir='/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/share/gsettings-schemas/gtk+3-3.24.35'
mesonFlags=''
export mesonFlags
name='nix-shell-env'
export name
nativeBuildInputs=''
export nativeBuildInputs
out='/home/curiouslad/RustProjects/yamcl/outputs/out'
export out
outputBin='out'
outputDev='out'
outputDevdoc='REMOVE'
outputDevman='out'
outputDoc='out'
outputInclude='out'
outputInfo='out'
outputLib='out'
outputMan='out'
outputs='out'
export outputs
patches=''
export patches
phases='buildPhase'
export phases
pkg='/nix/store/9nj6qjqp0d25giirzj9f0k35g2s58g0h-gcc-wrapper-11.3.0'
declare -a pkgsBuildBuild=()
declare -a pkgsBuildHost=('/nix/store/qbbh33w8jwr1pb6vxp2aplcsdlj6hvvk-patchelf-0.15.0' '/nix/store/59jmzisg8fkm9c125fw384dqq1np602l-move-docs.sh' '/nix/store/kxw6q8v6isaqjm702d71n2421cxamq68-make-symlinks-relative.sh' '/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh' '/nix/store/g8xg0i02aqwhgxwd2vnp5ax3d6lrkg1v-strip.sh' '/nix/store/bnj8d7mvbkg3vdb07yz74yhl3g107qq5-patch-shebangs.sh' '/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh' '/nix/store/8zxndz5ag0p6s526c2xyllhk1nrn4c3i-audit-tmpdir.sh' '/nix/store/c8n9kcdddp9np665xz6ri61b383nxvz8-move-systemd-user-units.sh' '/nix/store/1i5y55x4b4m9qkx5dqbmr1r6bvrqbanw-multiple-outputs.sh' '/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh' '/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh' '/nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh' '/nix/store/wlwcf1nw2b21m4gghj70hbg1v7x53ld8-reproducible-builds.sh' '/nix/store/9nj6qjqp0d25giirzj9f0k35g2s58g0h-gcc-wrapper-11.3.0' '/nix/store/lxgn5spk779wflksgibx4jv4n10w6x71-binutils-wrapper-2.39' )
declare -a pkgsBuildTarget=()
declare -a pkgsHostHost=()
declare -a pkgsHostTarget=('/nix/store/kzva88zx064m863s7lwyh13j8dsmcw2m-rust-1.71.0-nightly-2023-04-26-1c42cb4ef' '/nix/store/qbx0gskpalv09scmqk9p8iwfglxblq1h-cargo-1.64.0' '/nix/store/lz625kwwj6b36wy1y286aji3qmsd37sw-rustc-1.64.0' '/nix/store/53wn361h9qz8bzq91gplym9m7fddf2va-rustfmt-1.64.0' '/nix/store/kmmq2lp8s34wgvz4rxyxh3vps6nzhqbh-cmake-3.24.3' '/nix/store/m0p2xy7km6sj75bn30j1dvrz2v83bzi9-pkg-config-wrapper-0.29.2' '/nix/store/bc39j9xykzijxcz6q74zqihi31qhhym6-dbus-1.14.4-dev' '/nix/store/v19md6ca0vhq6xipb1gf6290hf2zb39a-expat-2.5.0-dev' '/nix/store/yi2kw56ix8fdwjzd089zqdly102n1f95-expat-2.5.0' '/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib' '/nix/store/b1vhk5dgygzk9dmad4w7gdkbzszznwfb-dbus-1.14.4' '/nix/store/gz31hsi6hdf0a2xzsznwfmv7vdw4ahcn-openssl-3.0.8-dev' '/nix/store/hpcwwg6k6hfrp1fyf3vc1llkkl5gf3vv-openssl-3.0.8-bin' '/nix/store/np58sm45gngld2nnqjq6p532j3v2kbfl-openssl-3.0.8' '/nix/store/8bim1kjhd7m7kxmsyn8ghcp4rn2h9mjs-glib-2.74.3-dev' '/nix/store/bsslcbcnrfcv6nl0jfha444nxjky7zxa-zlib-1.2.13-dev' '/nix/store/4xqki8nyafl26w2p71w988djvfmfz4x1-zlib-1.2.13' '/nix/store/l7c92rkjf863an5swav4110qrkis73hk-libffi-3.4.4-dev' '/nix/store/iarp5ija5frd4cj237lw8y0lir4l8b4f-libffi-3.4.4' '/nix/store/lk1y5l37wcmpg7986ccc8gyyxdgy494l-gettext-0.21' '/nix/store/fs78ayawqsacvrw1lbn7wq63x5av6gr0-glibc-iconv-2.35' '/nix/store/h4wpa1lxg3csc9y6vymii8xaipqydi1q-glib-2.74.3-bin' '/nix/store/li6g1fg7l45c2fq8kq6gfy81jm1lwla3-glib-2.74.3' '/nix/store/87s0jp02ahjr8r9cvk0ss5va15qjrhji-gtk+3-3.24.35-dev' '/nix/store/4nnk5spr3flhrkscdnjnizbk684w114j-at-spi2-core-2.46.0-dev' '/nix/store/z72g6cbnyvr4ik19p1jmaq36iz6qh2al-at-spi2-core-2.46.0' '/nix/store/dix0gs7byblp25zqwq6snblmwa35iyx2-cairo-1.16.0-dev' '/nix/store/rdlzk9abm14a48amswlnkcy9p461iwn9-fontconfig-2.14.0-dev' '/nix/store/51zb6d1c9wrq6g3fzmrm8c5qa7l3y9zg-freetype-2.12.1-dev' '/nix/store/5b7fc424v8p3mskkgv221rn99gbj6iy9-bzip2-1.0.8-dev' '/nix/store/k2chpzfvhd0kds4pa6r2ip7y3x6sq4px-bzip2-1.0.8-bin' '/nix/store/kdz2f3z0cyx553sz9j68cbcm10xsmk45-bzip2-1.0.8' '/nix/store/yy6scc1c1p4j0yyn4i9d1pvjahin68a4-libpng-apng-1.6.37-dev' '/nix/store/q07p023whnl7xn3hncjny62g7vj4ad5q-libpng-apng-1.6.37' '/nix/store/lwvv4fns4d05h22cjd9r8axblgmdcjc3-freetype-2.12.1' '/nix/store/cp4j9xfqiwhli4cl79q15lgmk8j7y76n-fontconfig-2.14.0-bin' '/nix/store/j9c7b5mj90jcqx328qwx9ss6llbraam3-fontconfig-2.14.0-lib' '/nix/store/ng9wpq2wcv8zrvgwqxhxc0jy5cvndsqb-pixman-0.42.2' '/nix/store/yvzdsyd505lnqlj68z13jql4c2hgr1j8-libXext-1.3.4-dev' '/nix/store/dgfh4gqspzgn3dcbbxl8zvd8hwrq0chm-xorgproto-2021.5' '/nix/store/kz2kxdqfkrm6gwir5m1iz8zc7d33q8ch-libXau-1.0.9-dev' '/nix/store/1p8cxmc6zn0121aq11l6c9b52mjw1634-libXau-1.0.9' '/nix/store/bc5wfm9vng74b23z528kryph1vg361d1-libXext-1.3.4' '/nix/store/pyaadbqg7kalglzs2rpwchg72cvk6bxh-libXrender-0.9.10-dev' '/nix/store/0d3w70qlw46swm188cm6xyklc2pk9p81-libX11-1.8.4-dev' '/nix/store/wqgr8z72bhza1ffb5vzqivg85a7l5njl-libxcb-1.14-dev' '/nix/store/qlvfjybj7zfd3la21av72lakd8dgakj6-libxcb-1.14' '/nix/store/8849pngybhw9bxnciazr8vj1icxq7kzy-libX11-1.8.4' '/nix/store/900mvpl3jn2816sj4rqkr5q7wm77np5q-libXrender-0.9.10' '/nix/store/jg16yffkxbxvd3pwp9s85fzy7bnyv67z-xcb-util-0.4.0-dev' '/nix/store/mlc9kysnjmbqy3br03h3p4qdrjyzb4rp-xcb-util-0.4.0' '/nix/store/6xf7yvkjjcwnpv5v0pq3qg9p3ynmzi8l-libGL-1.5.0-dev' '/nix/store/6ysdnx59r6idn6hqsma31fd9nch3bbhc-libGL-1.5.0' '/nix/store/6qrsxnflfyr7g50m2y4f9r92fm076yxq-libglvnd-1.5.0' '/nix/store/mipiv1dlvmb3vyh7asyqbls265g14dyw-libglvnd-1.5.0-dev' '/nix/store/y29q03rbsxm5r26jmqqah7lpi3qfj8r8-cairo-1.16.0' '/nix/store/xdjgiaf64x0p1wf3sw5sraz1ffz7zhil-fribidi-1.0.12' '/nix/store/6kh247v8hhg30799a13bf0n0mzz8rd3x-gdk-pixbuf-2.42.10-dev' '/nix/store/pz10fqn6ivqjvmfva3fpbm1sj1h8mppn-libtiff-4.4.0-dev' '/nix/store/52mjgn5wb0qyfdzdx28k23a8q3ip2bi3-libjpeg-turbo-2.1.4-dev' '/nix/store/4bnii56y9znp80x9wx0kq8sq6s22plyi-libjpeg-turbo-2.1.4-bin' '/nix/store/kgjip3sdackjknvazjrrqg1rma2z3p85-libjpeg-turbo-2.1.4' '/nix/store/4mxfwln7ar5cniwzr81y3z013n3w0nhq-xz-5.2.7-dev' '/nix/store/ad6v3m4l6q1nyy3j17aqi41q6v8br9hw-xz-5.2.7-bin' '/nix/store/pba2y71yi3hxhn7vmab9hwsmi8a69v41-xz-5.2.7' '/nix/store/glyz34sljwyb99n7pz16x72sr97zpn1p-libtiff-4.4.0-bin' '/nix/store/drc7a6vnrfib5cxab962289r2i3wx0i5-libtiff-4.4.0' '/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10' '/nix/store/si7bwnd2p7d1bfqig9l2w1xfghl50jrm-gsettings-desktop-schemas-43.0' '/nix/store/bzg5kj7nq2fvd3gf7cp56di5cqplrabb-libICE-1.0.10-dev' '/nix/store/9yv535640914hhcnlc9iyzmq4n8bb2sa-libICE-1.0.10' '/nix/store/iz3v8b4l7s9ddfq9l6slx2plw5kqxy6j-libSM-1.2.3-dev' '/nix/store/gdz6vb8h6sh3ggscnrps6arqip3mq69w-libSM-1.2.3' '/nix/store/6g4w9rfb52f47pfnv8g35is3m526vdv0-libXcomposite-0.4.5-dev' '/nix/store/r5c881pxp69as01yiw0jh10y4d35cmbh-libXfixes-6.0.0-dev' '/nix/store/1ih4f54i0i0hkb1rwzywxfdm25jfrrb8-libXfixes-6.0.0' '/nix/store/3i0givqr6d7w5c706f32rby4c9zws1ii-libXcomposite-0.4.5' '/nix/store/26p0j8gbl2m78mqksk8rh9dari7sbviq-libXcursor-1.2.0-dev' '/nix/store/c7bcn6jr82bnfwl6nrlvspj2ysj8si1j-libXcursor-1.2.0' '/nix/store/5ai194payhqhmxz6x12g0h16h6b0frx7-libXdamage-1.1.5-dev' '/nix/store/j922381s593yyshcdk4hnvx8wivvbgfr-libXdamage-1.1.5' '/nix/store/2r9cvz2v524rjcmmp26043ms7s3dnmrc-libXi-1.8-dev' '/nix/store/1sxbhkma4bdkxwnl90vmh8z6lpfank95-libXi-1.8' '/nix/store/gani2rj9vbg126dxyjb940pvw4bqrxn3-libXrandr-1.5.2-dev' '/nix/store/3rpbhbnhkqm22cs12ka8zll3bq3m5h5d-libXrandr-1.5.2' '/nix/store/naw9z8ppdi1sv23bkzw8lrq3hh0hlq6j-pango-1.50.12-dev' '/nix/store/s481ymibclbcrmnqqc8n6n1lwnhqv48k-harfbuzz-5.2.0-dev' '/nix/store/49ngvbs3vw3j7n2zwsg30ifmwv7mb3nq-graphite2-1.3.14' '/nix/store/r7hl9pcjr94xv2y7sc7bwl0cr6yvkvi9-harfbuzz-5.2.0' '/nix/store/cxnv2w7saywi1yrca9yrvf0735i5is23-libXft-2.3.6-dev' '/nix/store/fiiyix63nzqg7nqpxi7cnm1dva03c955-libXft-2.3.6' '/nix/store/jgnmdd405kyasw44piz30kc4z121rs8x-pango-1.50.12-bin' '/nix/store/lzy87jr1rg06kh89q49p4hsf6ngqnh7k-pango-1.50.12' '/nix/store/asj7vmsvcfk49cx21ayxllha2ib28a5i-wayland-1.21.0-dev' '/nix/store/m3w84izbv368zcn1cs32gaphwsqisyqk-wayland-1.21.0-bin' '/nix/store/i1nlwakpsjx90b5274zbz4gsfc0dd3lw-wayland-1.21.0' '/nix/store/2rs9n7xyn8hbic1311i6vi5hza4mcrl0-wayland-protocols-1.27' '/nix/store/301p8a3ma4css4jbxyh5qqplsppglvf4-libXinerama-1.1.4-dev' '/nix/store/i68jz10hjlzbbjasi4wgh2i0hi5s3gvr-libXinerama-1.1.4' '/nix/store/bifnifdksalakiycddjf514m7shxa827-cups-2.4.2-dev' '/nix/store/r8b24303nrxssliqxqa8nhhjd1brnnhs-gmp-with-cxx-6.2.1-dev' '/nix/store/qa8wjyjm791632xsm8pzvp0v00m90yxw-gmp-with-cxx-6.2.1' '/nix/store/wb4m1f6ywhzmvfpdwinbfpnpj8i4lvzn-cups-2.4.2-lib' '/nix/store/642shi3xqc38giyywpmczgm5mwjxvnba-cups-2.4.2' '/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35' '/nix/store/qyv1mx1dniw6675wmx73iy311j7scpa7-libsoup-2.74.3-dev' '/nix/store/yl1by5rangbxbk4glvm80k6q8a8i0ir0-libxml2-2.10.3-dev' '/nix/store/zcpkmxpig5vv5g5nd00nkd64pk7pgbf1-hook' '/nix/store/pwjclncq1z5ps46z4rnnf4v98r6zfnfr-libxml2-2.10.3-bin' '/nix/store/s5qp4yyysx3ylafw7ia2mlvybmg77ys7-libxml2-2.10.3' '/nix/store/dn8xrykgpw2hs96pw9jk3xf1zb3csr9q-libsoup-2.74.3' '/nix/store/cpfhj8ipiwsf1884n0mpqgmzzfih0bfr-webkitgtk-2.38.5+abi=4.0-dev' '/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0' '/nix/store/9557s8hv3d512q2lawacqmlhyz84jkw9-appimagekit-unstable-2020-12-31' '/nix/store/ny9ppsk875nzmcwvz5wl3zkg2pxni671-tauri-1.0.5' '/nix/store/5ak7x16fcph2hl3fbnv96xpg4b7q7jk4-pnpm-7.14.2' )
declare -a pkgsTargetTarget=()
declare -a postFixupHooks=('_multioutPropagateDev' 'cmakePcfileCheckPhase' )
declare -a postHooks=('makeCmakeFindLibs' )
declare -a postUnpackHooks=('_updateSourceDateEpochFromSourceRoot' )
declare -a preConfigureHooks=('_multioutConfig' )
declare -a preFixupHooks=('_moveToShare' '_multioutDocs' '_multioutDevs' )
preFixupPhases=' glibPreFixupPhase dropIconThemeCache'
preInstallPhases=' glibPreInstallPhase'
prefix='/home/curiouslad/RustProjects/yamcl/outputs/out'
declare -a propagatedBuildDepFiles=('propagated-build-build-deps' 'propagated-native-build-inputs' 'propagated-build-target-deps' )
propagatedBuildInputs=''
export propagatedBuildInputs
declare -a propagatedHostDepFiles=('propagated-host-host-deps' 'propagated-build-inputs' )
propagatedNativeBuildInputs=''
export propagatedNativeBuildInputs
declare -a propagatedTargetDepFiles=('propagated-target-target-deps' )
role_post=''
setOutputFlags=''
shell='/nix/store/cdfwlj71yd6p5bmxsk2gk9xqc0friykg-bash-5.1-p16/bin/bash'
export shell
shellHook='export LD_LIBRARY_PATH=/nix/store/ykis1j25kx074x7yyws1fmjz9mkim3xf-webkitgtk-2.38.5+abi=4.0/lib:/nix/store/i8bhmhppv5wq3i3qr4qjq46wjnrjhmaj-gtk+3-3.24.35/lib:/nix/store/y29q03rbsxm5r26jmqqah7lpi3qfj8r8-cairo-1.16.0/lib:/nix/store/b3r3xqmzha2mj06skbm592yyaqqdh5yv-gdk-pixbuf-2.42.10/lib:/nix/store/li6g1fg7l45c2fq8kq6gfy81jm1lwla3-glib-2.74.3/lib:/nix/store/5n6vixzn9x20ypyqnb9sxmslqm2jkggm-dbus-1.14.4-lib/lib:/nix/store/np58sm45gngld2nnqjq6p532j3v2kbfl-openssl-3.0.8/lib:$LD_LIBRARY_PATH
'
export shellHook
stdenv='/nix/store/ifiygfv17dzpbssxwrld6a57iclzrb09-stdenv-linux'
export stdenv
strictDeps=''
export strictDeps
system='x86_64-linux'
export system
declare -a unpackCmdHooks=('_defaultUnpack' )
_activatePkgs ()
{
 
    local hostOffset targetOffset;
    local pkg;
    for hostOffset in "${allPlatOffsets[@]}";
    do
        local pkgsVar="${pkgAccumVarVars[hostOffset + 1]}";
        for targetOffset in "${allPlatOffsets[@]}";
        do
            (( hostOffset <= targetOffset )) || continue;
            local pkgsRef="${pkgsVar}[$targetOffset - $hostOffset]";
            local pkgsSlice="${!pkgsRef}[@]";
            for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
            do
                activatePackage "$pkg" "$hostOffset" "$targetOffset";
            done;
        done;
    done
}
_addRpathPrefix ()
{
 
    if [ "${NIX_NO_SELF_RPATH:-0}" != 1 ]; then
        export NIX_LDFLAGS="-rpath $1/lib ${NIX_LDFLAGS-}";
        if [ -n "${NIX_LIB64_IN_SELF_RPATH:-}" ]; then
            export NIX_LDFLAGS="-rpath $1/lib64 ${NIX_LDFLAGS-}";
        fi;
        if [ -n "${NIX_LIB32_IN_SELF_RPATH:-}" ]; then
            export NIX_LDFLAGS="-rpath $1/lib32 ${NIX_LDFLAGS-}";
        fi;
    fi
}
_addToEnv ()
{
 
    local depHostOffset depTargetOffset;
    local pkg;
    for depHostOffset in "${allPlatOffsets[@]}";
    do
        local hookVar="${pkgHookVarVars[depHostOffset + 1]}";
        local pkgsVar="${pkgAccumVarVars[depHostOffset + 1]}";
        for depTargetOffset in "${allPlatOffsets[@]}";
        do
            (( depHostOffset <= depTargetOffset )) || continue;
            local hookRef="${hookVar}[$depTargetOffset - $depHostOffset]";
            if [[ -z "${strictDeps-}" ]]; then
                local visitedPkgs="";
                for pkg in "${pkgsBuildBuild[@]}" "${pkgsBuildHost[@]}" "${pkgsBuildTarget[@]}" "${pkgsHostHost[@]}" "${pkgsHostTarget[@]}" "${pkgsTargetTarget[@]}";
                do
                    if [[ "$visitedPkgs" = *"$pkg"* ]]; then
                        continue;
                    fi;
                    runHook "${!hookRef}" "$pkg";
                    visitedPkgs+=" $pkg";
                done;
            else
                local pkgsRef="${pkgsVar}[$depTargetOffset - $depHostOffset]";
                local pkgsSlice="${!pkgsRef}[@]";
                for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
                do
                    runHook "${!hookRef}" "$pkg";
                done;
            fi;
        done;
    done
}
_allFlags ()
{
 
    for varName in $(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }');
    do
        if (( "${NIX_DEBUG:-0}" >= 1 )); then
            printf "@%s@ -> %q\n" "${varName}" "${!varName}";
        fi;
        args+=("--subst-var" "$varName");
    done
}
_assignFirst ()
{
 
    local varName="$1";
    local REMOVE=REMOVE;
    shift;
    while (( $# )); do
        if [ -n "${!1-}" ]; then
            eval "${varName}"="$1";
            return;
        fi;
        shift;
    done;
    echo "Error: _assignFirst found no valid variant!";
    return 1
}
_callImplicitHook ()
{
 
    local def="$1";
    local hookName="$2";
    if declare -F "$hookName" > /dev/null; then
        "$hookName";
    else
        if type -p "$hookName" > /dev/null; then
            source "$hookName";
        else
            if [ -n "${!hookName:-}" ]; then
                eval "${!hookName}";
            else
                return "$def";
            fi;
        fi;
    fi
}
_defaultUnpack ()
{
 
    local fn="$1";
    if [ -d "$fn" ]; then
        cp -pr --reflink=auto -- "$fn" "$(stripHash "$fn")";
    else
        case "$fn" in 
            *.tar.xz | *.tar.lzma | *.txz)
                xz -d < "$fn" | tar xf - --warning=no-timestamp
            ;;
            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)
                tar xf "$fn" --warning=no-timestamp
            ;;
            *)
                return 1
            ;;
        esac;
    fi
}
_doStrip ()
{
 
    local -ra flags=(dontStripHost dontStripTarget);
    local -ra debugDirs=(stripDebugList stripDebugListTarget);
    local -ra allDirs=(stripAllList stripAllListTarget);
    local -ra stripCmds=(STRIP STRIP_FOR_TARGET);
    local -ra ranlibCmds=(RANLIB RANLIB_FOR_TARGET);
    stripDebugList=${stripDebugList:-lib lib32 lib64 libexec bin sbin};
    stripDebugListTarget=${stripDebugListTarget:-};
    stripAllList=${stripAllList:-};
    stripAllListTarget=${stripAllListTarget:-};
    local i;
    for i in ${!stripCmds[@]};
    do
        local -n flag="${flags[$i]}";
        local -n debugDirList="${debugDirs[$i]}";
        local -n allDirList="${allDirs[$i]}";
        local -n stripCmd="${stripCmds[$i]}";
        local -n ranlibCmd="${ranlibCmds[$i]}";
        if [[ -n "${dontStrip-}" || -n "${flag-}" ]] || ! type -f "${stripCmd-}" 2> /dev/null; then
            continue;
        fi;
        stripDirs "$stripCmd" "$ranlibCmd" "$debugDirList" "${stripDebugFlags:--S}";
        stripDirs "$stripCmd" "$ranlibCmd" "$allDirList" "${stripAllFlags:--s}";
    done
}
_eval ()
{
 
    if declare -F "$1" > /dev/null 2>&1; then
        "$@";
    else
        eval "$1";
    fi
}
_gtkCleanImmodulesCache ()
{
 
    local f="${prefix:?}/lib/gtk-3.0/3.0.0/immodules.cache";
    if [ -f "$f" ]; then
        sed 's|Created by .*bin/gtk-query-|Created by bin/gtk-query-|' -i "$f";
    fi
}
_makeSymlinksRelative ()
{
 
    local symlinkTarget;
    if [ -n "${dontRewriteSymlinks-}" ]; then
        return 0;
    fi;
    while IFS= read -r -d '' f; do
        symlinkTarget=$(readlink "$f");
        if [[ "$symlinkTarget"/ != "$prefix"/* ]]; then
            continue;
        fi;
        if [ ! -e "$symlinkTarget" ]; then
            echo "the symlink $f is broken, it points to $symlinkTarget (which is missing)";
        fi;
        echo "rewriting symlink $f to be relative to $prefix";
        ln -snrf "$symlinkTarget" "$f";
    done < <(find $prefix -type l -print0)
}
_moveLib64 ()
{
 
    if [ "${dontMoveLib64-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/lib64" -o -L "$prefix/lib64" ]; then
        return;
    fi;
    echo "moving $prefix/lib64/* to $prefix/lib";
    mkdir -p $prefix/lib;
    shopt -s dotglob;
    for i in $prefix/lib64/*;
    do
        mv --no-clobber "$i" $prefix/lib;
    done;
    shopt -u dotglob;
    rmdir $prefix/lib64;
    ln -s lib $prefix/lib64
}
_moveSbin ()
{
 
    if [ "${dontMoveSbin-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/sbin" -o -L "$prefix/sbin" ]; then
        return;
    fi;
    echo "moving $prefix/sbin/* to $prefix/bin";
    mkdir -p $prefix/bin;
    shopt -s dotglob;
    for i in $prefix/sbin/*;
    do
        mv "$i" $prefix/bin;
    done;
    shopt -u dotglob;
    rmdir $prefix/sbin;
    ln -s bin $prefix/sbin
}
_moveSystemdUserUnits ()
{
 
    if [ "${dontMoveSystemdUserUnits:-0}" = 1 ]; then
        return;
    fi;
    if [ ! -e "${prefix:?}/lib/systemd/user" ]; then
        return;
    fi;
    local source="$prefix/lib/systemd/user";
    local target="$prefix/share/systemd/user";
    echo "moving $source/* to $target";
    mkdir -p "$target";
    ( shopt -s dotglob;
    for i in "$source"/*;
    do
        mv "$i" "$target";
    done );
    rmdir "$source";
    ln -s "$target" "$source"
}
_moveToShare ()
{
 
    forceShare=${forceShare:=man doc info};
    if [[ -z "$out" ]]; then
        return;
    fi;
    for d in $forceShare;
    do
        if [ -d "$out/$d" ]; then
            if [ -d "$out/share/$d" ]; then
                echo "both $d/ and share/$d/ exist!";
            else
                echo "moving $out/$d to $out/share/$d";
                mkdir -p $out/share;
                mv $out/$d $out/share/;
            fi;
        fi;
    done
}
_multioutConfig ()
{
 
    if [ "$outputs" = "out" ] || [ -z "${setOutputFlags-1}" ]; then
        return;
    fi;
    if [ -z "$shareDocName" ]; then
        local confScript="$configureScript";
        if [ -z "$confScript" ] && [ -x ./configure ]; then
            confScript=./configure;
        fi;
        if [ -f "$confScript" ]; then
            local shareDocName="$(sed -n "s/^PACKAGE_TARNAME='\(.*\)'$/\1/p" < "$confScript")";
        fi;
        if [ -z "$shareDocName" ] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_-]'; then
            shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
        fi;
    fi;
    configureFlags="        --bindir=${!outputBin}/bin --sbindir=${!outputBin}/sbin         --includedir=${!outputInclude}/include --oldincludedir=${!outputInclude}/include         --mandir=${!outputMan}/share/man --infodir=${!outputInfo}/share/info         --docdir=${!outputDoc}/share/doc/${shareDocName}         --libdir=${!outputLib}/lib --libexecdir=${!outputLib}/libexec         --localedir=${!outputLib}/share/locale         $configureFlags";
    installFlags="        pkgconfigdir=${!outputDev}/lib/pkgconfig         m4datadir=${!outputDev}/share/aclocal aclocaldir=${!outputDev}/share/aclocal         $installFlags"
}
_multioutDevs ()
{
 
    if [ "$outputs" = "out" ] || [ -z "${moveToDev-1}" ]; then
        return;
    fi;
    moveToOutput include "${!outputInclude}";
    moveToOutput lib/pkgconfig "${!outputDev}";
    moveToOutput share/pkgconfig "${!outputDev}";
    moveToOutput lib/cmake "${!outputDev}";
    moveToOutput share/aclocal "${!outputDev}";
    for f in "${!outputDev}"/{lib,share}/pkgconfig/*.pc;
    do
        echo "Patching '$f' includedir to output ${!outputInclude}";
        sed -i "/^includedir=/s,=\${prefix},=${!outputInclude}," "$f";
    done
}
_multioutDocs ()
{
 
    local REMOVE=REMOVE;
    moveToOutput share/info "${!outputInfo}";
    moveToOutput share/doc "${!outputDoc}";
    moveToOutput share/gtk-doc "${!outputDevdoc}";
    moveToOutput share/devhelp/books "${!outputDevdoc}";
    moveToOutput share/man "${!outputMan}";
    moveToOutput share/man/man3 "${!outputDevman}"
}
_multioutPropagateDev ()
{
 
    if [ "$outputs" = "out" ]; then
        return;
    fi;
    local outputFirst;
    for outputFirst in $outputs;
    do
        break;
    done;
    local propagaterOutput="$outputDev";
    if [ -z "$propagaterOutput" ]; then
        propagaterOutput="$outputFirst";
    fi;
    if [ -z "${propagatedBuildOutputs+1}" ]; then
        local po_dirty="$outputBin $outputInclude $outputLib";
        set +o pipefail;
        propagatedBuildOutputs=`echo "$po_dirty"             | tr -s ' ' '\n' | grep -v -F "$propagaterOutput"             | sort -u | tr '\n' ' ' `;
        set -o pipefail;
    fi;
    if [ -z "$propagatedBuildOutputs" ]; then
        return;
    fi;
    mkdir -p "${!propagaterOutput}"/nix-support;
    for output in $propagatedBuildOutputs;
    do
        echo -n " ${!output}" >> "${!propagaterOutput}"/nix-support/propagated-build-inputs;
    done
}
_overrideFirst ()
{
 
    if [ -z "${!1-}" ]; then
        _assignFirst "$@";
    fi
}
_pruneLibtoolFiles ()
{
 
    if [ "${dontPruneLibtoolFiles-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    find "$prefix" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \; -exec grep -q "^old_library=''" {} \; -exec sed -i {} -e "/^dependency_libs='[^']/ c dependency_libs='' #pruned" \;
}
_updateSourceDateEpochFromSourceRoot ()
{
 
    if [ -n "$sourceRoot" ]; then
        updateSourceDateEpoch "$sourceRoot";
    fi
}
activatePackage ()
{
 
    local pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit -1;
    if [ -f "$pkg" ]; then
        source "$pkg";
    fi;
    if [[ -z "${strictDeps-}" || "$hostOffset" -le -1 ]]; then
        addToSearchPath _PATH "$pkg/bin";
    fi;
    if (( hostOffset <= -1 )); then
        addToSearchPath _XDG_DATA_DIRS "$pkg/share";
    fi;
    if [[ "$hostOffset" -eq 0 && -d "$pkg/bin" ]]; then
        addToSearchPath _HOST_PATH "$pkg/bin";
    fi;
    if [[ -f "$pkg/nix-support/setup-hook" ]]; then
        source "$pkg/nix-support/setup-hook";
    fi
}
addCMakeParams ()
{
 
    addToSearchPath CMAKE_PREFIX_PATH $1
}
addEnvHooks ()
{
 
    local depHostOffset="$1";
    shift;
    local pkgHookVarsSlice="${pkgHookVarVars[$depHostOffset + 1]}[@]";
    local pkgHookVar;
    for pkgHookVar in "${!pkgHookVarsSlice}";
    do
        eval "${pkgHookVar}s"'+=("$@")';
    done
}
addToSearchPath ()
{
 
    addToSearchPathWithCustomDelimiter ":" "$@"
}
addToSearchPathWithCustomDelimiter ()
{
 
    local delimiter="$1";
    local varName="$2";
    local dir="$3";
    if [[ -d "$dir" && "${!varName:+${delimiter}${!varName}${delimiter}}" != *"${delimiter}${dir}${delimiter}"* ]]; then
        export "${varName}=${!varName:+${!varName}${delimiter}}${dir}";
    fi
}
addXMLCatalogs ()
{
 
    local d i;
    for d in $1/share/xml $1/xml/dtd $1/xml/xsl;
    do
        if [ -d $d ]; then
            for i in $(find $d -name catalog.xml);
            do
                XML_CATALOG_FILES+=" $i";
            done;
        fi;
    done
}
auditTmpdir ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    header "checking for references to $TMPDIR/ in $dir...";
    local i;
    while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if isELF "$i"; then
            if { 
                printf :;
                patchelf --print-rpath "$i"
            } | grep -q -F ":$TMPDIR/"; then
                echo "RPATH of binary $i contains a forbidden reference to $TMPDIR/";
                exit 1;
            fi;
        fi;
        if isScript "$i"; then
            if [ -e "$(dirname "$i")/.$(basename "$i")-wrapped" ]; then
                if grep -q -F "$TMPDIR/" "$i"; then
                    echo "wrapper script $i contains a forbidden reference to $TMPDIR/";
                    exit 1;
                fi;
            fi;
        fi;
    done < <(find "$dir" -type f -print0);
    stopNest
}
bintoolsWrapper_addLDVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [[ -d "$1/lib64" && ! -L "$1/lib64" ]]; then
        export NIX_LDFLAGS${role_post}+=" -L$1/lib64";
    fi;
    if [[ -d "$1/lib" ]]; then
        local -a glob=($1/lib/lib*);
        if [ "${#glob[*]}" -gt 0 ]; then
            export NIX_LDFLAGS${role_post}+=" -L$1/lib";
        fi;
    fi
}
buildPhase ()
{
 
    runHook preBuild;
    : ${makeFlags=};
    if [[ -z "$makeFlags" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile, doing nothing";
    else
        foundMakefile=1;
        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags "${makeFlagsArray[@]}" $buildFlags "${buildFlagsArray[@]}");
        echoCmd 'build flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postBuild
}
ccWrapper_addCVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [ -d "$1/include" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -isystem $1/include";
    fi;
    if [ -d "$1/Library/Frameworks" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -iframework $1/Library/Frameworks";
    fi
}
checkPhase ()
{
 
    runHook preCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom checkPhase, doing nothing";
        runHook postCheck;
        return;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then
            checkTarget=check;
        else
            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then
                checkTarget=test;
            fi;
        fi;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        echo "no check/test target in ${makefile:-Makefile}, doing nothing";
    else
        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags "${makeFlagsArray[@]}" ${checkFlags:-VERBOSE=y} "${checkFlagsArray[@]}" ${checkTarget});
        echoCmd 'check flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postCheck
}
closeNest ()
{
 
    true
}
cmakeConfigurePhase ()
{
 
    runHook preConfigure;
    : ${cmakeBuildDir:=build};
    export CTEST_OUTPUT_ON_FAILURE=1;
    if [ -n "${enableParallelChecking-1}" ]; then
        export CTEST_PARALLEL_LEVEL=$NIX_BUILD_CORES;
    fi;
    if [ -z "${dontFixCmake-}" ]; then
        fixCmakeFiles .;
    fi;
    if [ -z "${dontUseCmakeBuildDir-}" ]; then
        mkdir -p "$cmakeBuildDir";
        cd "$cmakeBuildDir";
        : ${cmakeDir:=..};
    else
        : ${cmakeDir:=.};
    fi;
    if [ -z "${dontAddPrefix-}" ]; then
        cmakeFlags="-DCMAKE_INSTALL_PREFIX=$prefix $cmakeFlags";
    fi;
    cmakeFlags="-DCMAKE_CXX_COMPILER=$CXX $cmakeFlags";
    cmakeFlags="-DCMAKE_C_COMPILER=$CC $cmakeFlags";
    cmakeFlags="-DCMAKE_AR=$(command -v $AR) $cmakeFlags";
    cmakeFlags="-DCMAKE_RANLIB=$(command -v $RANLIB) $cmakeFlags";
    cmakeFlags="-DCMAKE_STRIP=$(command -v $STRIP) $cmakeFlags";
    cmakeFlags="-DCMAKE_FIND_FRAMEWORK=LAST $cmakeFlags";
    cmakeFlags="-DCMAKE_OSX_SYSROOT= $cmakeFlags";
    cmakeFlags="-DCMAKE_POLICY_DEFAULT_CMP0025=NEW $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_NAME_DIR=${!outputLib}/lib $cmakeFlags";
    if [[ -z "$shareDocName" ]]; then
        local cmakeLists="${cmakeDir}/CMakeLists.txt";
        if [[ -f "$cmakeLists" ]]; then
            local shareDocName="$(grep --only-matching --perl-regexp --ignore-case '\bproject\s*\(\s*"?\K([^[:space:]")]+)' < "$cmakeLists" | head -n1)";
        fi;
        if [[ -z "$shareDocName" ]] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_+-]'; then
            if [[ -n "${pname-}" ]]; then
                shareDocName="$pname";
            else
                shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
            fi;
        fi;
    fi;
    cmakeFlags="-DCMAKE_INSTALL_BINDIR=${!outputBin}/bin $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_SBINDIR=${!outputBin}/sbin $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_INCLUDEDIR=${!outputInclude}/include $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_OLDINCLUDEDIR=${!outputInclude}/include $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_MANDIR=${!outputMan}/share/man $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_INFODIR=${!outputInfo}/share/info $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_DOCDIR=${!outputDoc}/share/doc/${shareDocName} $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_LIBDIR=${!outputLib}/lib $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_LIBEXECDIR=${!outputLib}/libexec $cmakeFlags";
    cmakeFlags="-DCMAKE_INSTALL_LOCALEDIR=${!outputLib}/share/locale $cmakeFlags";
    if [ -z "${doCheck-}" ]; then
        cmakeFlags="-DBUILD_TESTING=OFF $cmakeFlags";
    fi;
    cmakeFlags="-DCMAKE_BUILD_TYPE=${cmakeBuildType:-Release} $cmakeFlags";
    cmakeFlags="-DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON $cmakeFlags";
    cmakeFlags="-DCMAKE_FIND_USE_PACKAGE_REGISTRY=OFF $cmakeFlags";
    cmakeFlags="-DCMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY=OFF $cmakeFlags";
    if [ "${buildPhase-}" = ninjaBuildPhase ]; then
        cmakeFlags="-GNinja $cmakeFlags";
    fi;
    echo "cmake flags: $cmakeFlags ${cmakeFlagsArray[@]}";
    cmake "$cmakeDir" $cmakeFlags "${cmakeFlagsArray[@]}";
    if ! [[ -v enableParallelBuilding ]]; then
        enableParallelBuilding=1;
        echo "cmake: enabled parallel building";
    fi;
    runHook postConfigure
}
cmakePcfileCheckPhase ()
{
 
    while IFS= read -rd '' file; do
        grepout=$(grep --line-number '}//nix/store' "$file" || true);
        if [ -n "$grepout" ]; then
            { 
                echo "Broken paths found in a .pc file! $file";
                echo "The following lines have issues (specifically '//' in paths).";
                echo "$grepout";
                echo "It is very likely that paths are being joined improperly.";
                echo 'ex: "${prefix}/@CMAKE_INSTALL_LIBDIR@" should be "@CMAKE_INSTALL_FULL_LIBDIR@"';
                echo "Please see https://github.com/NixOS/nixpkgs/issues/144170 for more details.";
                exit 1
            } 1>&2;
        fi;
    done < <(find "${!outputDev}" -iname "*.pc" -print0)
}
compressManPages ()
{
 
    local dir="$1";
    if [ -L "$dir"/share ] || [ -L "$dir"/share/man ] || [ ! -d "$dir/share/man" ]; then
        return;
    fi;
    echo "gzipping man pages under $dir/share/man/";
    find "$dir"/share/man/ -type f -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | while IFS= read -r -d '' f; do
        if gzip -c -n "$f" > "$f".gz; then
            rm "$f";
        else
            rm "$f".gz;
        fi;
    done;
    find "$dir"/share/man/ -type l -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | sort -z | while IFS= read -r -d '' f; do
        local target;
        target="$(readlink -f "$f")";
        if [ -f "$target".gz ]; then
            ln -sf "$target".gz "$f".gz && rm "$f";
        fi;
    done
}
configurePhase ()
{
 
    runHook preConfigure;
    : ${configureScript=};
    : ${configureFlags=};
    if [[ -z "$configureScript" && -x ./configure ]]; then
        configureScript=./configure;
    fi;
    if [ -z "${dontFixLibtool:-}" ]; then
        export lt_cv_deplibs_check_method="${lt_cv_deplibs_check_method-pass_all}";
        local i;
        find . -iname "ltmain.sh" -print0 | while IFS='' read -r -d '' i; do
            echo "fixing libtool script $i";
            fixLibtool "$i";
        done;
        CONFIGURE_MTIME_REFERENCE=$(mktemp configure.mtime.reference.XXXXXX);
        find . -executable -type f -name configure -exec grep -l 'GNU Libtool is free software; you can redistribute it and/or modify' {} \; -exec touch -r {} "$CONFIGURE_MTIME_REFERENCE" \; -exec sed -i s_/usr/bin/file_file_g {} \; -exec touch -r "$CONFIGURE_MTIME_REFERENCE" {} \;;
        rm -f "$CONFIGURE_MTIME_REFERENCE";
    fi;
    if [[ -z "${dontAddPrefix:-}" && -n "$prefix" ]]; then
        configureFlags="${prefixKey:---prefix=}$prefix $configureFlags";
    fi;
    if [[ -f "$configureScript" ]]; then
        if [ -z "${dontAddDisableDepTrack:-}" ]; then
            if grep -q dependency-tracking "$configureScript"; then
                configureFlags="--disable-dependency-tracking $configureFlags";
            fi;
        fi;
        if [ -z "${dontDisableStatic:-}" ]; then
            if grep -q enable-static "$configureScript"; then
                configureFlags="--disable-static $configureFlags";
            fi;
        fi;
    fi;
    if [ -n "$configureScript" ]; then
        local flagsArray=($configureFlags "${configureFlagsArray[@]}");
        echoCmd 'configure flags' "${flagsArray[@]}";
        $configureScript "${flagsArray[@]}";
        unset flagsArray;
    else
        echo "no configure script, doing nothing";
    fi;
    runHook postConfigure
}
consumeEntire ()
{
 
    if IFS='' read -r -d '' $1; then
        echo "consumeEntire(): ERROR: Input null bytes, won't process" 1>&2;
        return 1;
    fi
}
distPhase ()
{
 
    runHook preDist;
    local flagsArray=($distFlags "${distFlagsArray[@]}" ${distTarget:-dist});
    echo 'dist flags: %q' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    if [ "${dontCopyDist:-0}" != 1 ]; then
        mkdir -p "$out/tarballs";
        cp -pvd ${tarballs:-*.tar.gz} "$out/tarballs";
    fi;
    runHook postDist
}
dropIconThemeCache ()
{
 
    if [[ -z "${dontDropIconThemeCache:-}" ]]; then
        local icondir="${out:?}/share/icons";
        if [[ -d "${icondir}" ]]; then
            find "${icondir}" -name 'icon-theme.cache' -print0 | while IFS= read -r -d '' file; do
                echo "Removing ${file}";
                rm -f "${file}";
            done;
        fi;
    fi
}
dumpVars ()
{
 
    if [ "${noDumpEnvVars:-0}" != 1 ]; then
        export 2> /dev/null >| "$NIX_BUILD_TOP/env-vars" || true;
    fi
}
echoCmd ()
{
 
    printf "%s:" "$1";
    shift;
    printf ' %q' "$@";
    echo
}
exitHandler ()
{
 
    exitCode="$?";
    set +e;
    if [ -n "${showBuildStats:-}" ]; then
        read -r -d '' -a buildTimes < <(times);
        echo "build times:";
        echo "user time for the shell             ${buildTimes[0]}";
        echo "system time for the shell           ${buildTimes[1]}";
        echo "user time for all child processes   ${buildTimes[2]}";
        echo "system time for all child processes ${buildTimes[3]}";
    fi;
    if (( "$exitCode" != 0 )); then
        runHook failureHook;
        if [ -n "${succeedOnFailure:-}" ]; then
            echo "build failed with exit code $exitCode (ignored)";
            mkdir -p "$out/nix-support";
            printf "%s" "$exitCode" > "$out/nix-support/failed";
            return 0;
        fi;
    else
        runHook exitHook;
    fi;
    return "$exitCode"
}
findGdkPixbufLoaders ()
{
 
    local loadersCache="$1/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache";
    if [[ -f "$loadersCache" ]]; then
        if [[ -f "${GDK_PIXBUF_MODULE_FILE-}" ]]; then
            if (( "$(cat "$loadersCache" | wc -l)" > "$(cat "$GDK_PIXBUF_MODULE_FILE" | wc -l)" )); then
                export GDK_PIXBUF_MODULE_FILE="$loadersCache";
            fi;
        else
            export GDK_PIXBUF_MODULE_FILE="$loadersCache";
        fi;
    fi
}
findInputs ()
{
 
    local -r pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit -1;
    local varVar="${pkgAccumVarVars[hostOffset + 1]}";
    local varRef="$varVar[$((targetOffset - hostOffset))]";
    local var="${!varRef}";
    unset -v varVar varRef;
    local varSlice="$var[*]";
    case "${!varSlice-}" in 
        *" $pkg "*)
            return 0
        ;;
    esac;
    unset -v varSlice;
    eval "$var"'+=("$pkg")';
    if ! [ -e "$pkg" ]; then
        echo "build input $pkg does not exist" 1>&2;
        exit 1;
    fi;
    function mapOffset () 
    { 
        local -r inputOffset="$1";
        local -n outputOffset="$2";
        if (( inputOffset <= 0 )); then
            outputOffset=$((inputOffset + hostOffset));
        else
            outputOffset=$((inputOffset - 1 + targetOffset));
        fi
    };
    local relHostOffset;
    for relHostOffset in "${allPlatOffsets[@]}";
    do
        local files="${propagatedDepFilesVars[relHostOffset + 1]}";
        local hostOffsetNext;
        mapOffset "$relHostOffset" hostOffsetNext;
        (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
        local relTargetOffset;
        for relTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$relHostOffset" <= "$relTargetOffset" )) || continue;
            local fileRef="${files}[$relTargetOffset - $relHostOffset]";
            local file="${!fileRef}";
            unset -v fileRef;
            local targetOffsetNext;
            mapOffset "$relTargetOffset" targetOffsetNext;
            (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
            [[ -f "$pkg/nix-support/$file" ]] || continue;
            local pkgNext;
            read -r -d '' pkgNext < "$pkg/nix-support/$file" || true;
            for pkgNext in $pkgNext;
            do
                findInputs "$pkgNext" "$hostOffsetNext" "$targetOffsetNext";
            done;
        done;
    done
}
fixCmakeFiles ()
{
 
    echo "fixing cmake files...";
    find "$1" \( -type f -name "*.cmake" -o -name "*.cmake.in" -o -name CMakeLists.txt \) -print | while read fn; do
        sed -e 's^/usr\([ /]\|$\)^/var/empty\1^g' -e 's^/opt\([ /]\|$\)^/var/empty\1^g' < "$fn" > "$fn.tmp";
        mv "$fn.tmp" "$fn";
    done
}
fixLibtool ()
{
 
    local search_path;
    for flag in $NIX_LDFLAGS;
    do
        case $flag in 
            -L*)
                search_path+=" ${flag#-L}"
            ;;
        esac;
    done;
    sed -i "$1" -e "s^eval \(sys_lib_search_path=\).*^\1'$search_path'^" -e 's^eval sys_lib_.+search_path=.*^^'
}
fixupPhase ()
{
 
    local output;
    for output in $outputs;
    do
        if [ -e "${!output}" ]; then
            chmod -R u+w "${!output}";
        fi;
    done;
    runHook preFixup;
    local output;
    for output in $outputs;
    do
        prefix="${!output}" runHook fixupOutput;
    done;
    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);
    declare -ra flatFiles=("${propagatedBuildDepFiles[@]}" "${propagatedHostDepFiles[@]}" "${propagatedTargetDepFiles[@]}");
    local propagatedInputsIndex;
    for propagatedInputsIndex in "${!flatVars[@]}";
    do
        local propagatedInputsSlice="${flatVars[$propagatedInputsIndex]}[@]";
        local propagatedInputsFile="${flatFiles[$propagatedInputsIndex]}";
        [[ -n "${!propagatedInputsSlice}" ]] || continue;
        mkdir -p "${!outputDev}/nix-support";
        printWords ${!propagatedInputsSlice} > "${!outputDev}/nix-support/$propagatedInputsFile";
    done;
    if [ -n "${setupHook:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        substituteAll "$setupHook" "${!outputDev}/nix-support/setup-hook";
    fi;
    if [ -n "${setupHooks:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        local hook;
        for hook in $setupHooks;
        do
            local content;
            consumeEntire content < "$hook";
            substituteAllStream content "file '$hook'" >> "${!outputDev}/nix-support/setup-hook";
            unset -v content;
        done;
        unset -v hook;
    fi;
    if [ -n "${propagatedUserEnvPkgs:-}" ]; then
        mkdir -p "${!outputBin}/nix-support";
        printWords $propagatedUserEnvPkgs > "${!outputBin}/nix-support/propagated-user-env-packages";
    fi;
    runHook postFixup
}
genericBuild ()
{
 
    if [ -f "${buildCommandPath:-}" ]; then
        source "$buildCommandPath";
        return;
    fi;
    if [ -n "${buildCommand:-}" ]; then
        eval "$buildCommand";
        return;
    fi;
    if [ -z "${phases:-}" ]; then
        phases="${prePhases:-} unpackPhase patchPhase ${preConfigurePhases:-}             configurePhase ${preBuildPhases:-} buildPhase checkPhase             ${preInstallPhases:-} installPhase ${preFixupPhases:-} fixupPhase installCheckPhase             ${preDistPhases:-} distPhase ${postPhases:-}";
    fi;
    for curPhase in $phases;
    do
        if [[ "$curPhase" = unpackPhase && -n "${dontUnpack:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = patchPhase && -n "${dontPatch:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = configurePhase && -n "${dontConfigure:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = buildPhase && -n "${dontBuild:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = checkPhase && -z "${doCheck:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = installPhase && -n "${dontInstall:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = fixupPhase && -n "${dontFixup:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = installCheckPhase && -z "${doInstallCheck:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = distPhase && -z "${doDist:-}" ]]; then
            continue;
        fi;
        if [[ -n $NIX_LOG_FD ]]; then
            echo "@nix { \"action\": \"setPhase\", \"phase\": \"$curPhase\" }" 1>&$NIX_LOG_FD;
        fi;
        showPhaseHeader "$curPhase";
        dumpVars;
        local startTime=$(date +"%s");
        eval "${!curPhase:-$curPhase}";
        local endTime=$(date +"%s");
        showPhaseFooter "$curPhase" "$startTime" "$endTime";
        if [ "$curPhase" = unpackPhase ]; then
            [ -z "${sourceRoot}" ] || chmod +x "${sourceRoot}";
            cd "${sourceRoot:-.}";
        fi;
    done
}
getHostRole ()
{
 
    getRole "$hostOffset"
}
getHostRoleEnvHook ()
{
 
    getRole "$depHostOffset"
}
getRole ()
{
 
    case $1 in 
        -1)
            role_post='_FOR_BUILD'
        ;;
        0)
            role_post=''
        ;;
        1)
            role_post='_FOR_TARGET'
        ;;
        *)
            echo "gettext-0.21: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
getTargetRole ()
{
 
    getRole "$targetOffset"
}
getTargetRoleEnvHook ()
{
 
    getRole "$depTargetOffset"
}
getTargetRoleWrapper ()
{
 
    case $targetOffset in 
        -1)
            export NIX_@wrapperName@_TARGET_BUILD_@suffixSalt@=1
        ;;
        0)
            export NIX_@wrapperName@_TARGET_HOST_@suffixSalt@=1
        ;;
        1)
            export NIX_@wrapperName@_TARGET_TARGET_@suffixSalt@=1
        ;;
        *)
            echo "gettext-0.21: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
gettextDataDirsHook ()
{
 
    getHostRoleEnvHook;
    if [ -d "$1/share/gettext" ]; then
        addToSearchPath "GETTEXTDATADIRS${role_post}" "$1/share/gettext";
    fi
}
glibPreFixupPhase ()
{
 
    if [ -d "$prefix/share/glib-2.0/schemas" ]; then
        mkdir -p "${!outputLib}/share/gsettings-schemas/$name/glib-2.0";
        mv "$prefix/share/glib-2.0/schemas" "${!outputLib}/share/gsettings-schemas/$name/glib-2.0/";
    fi;
    addToSearchPath GSETTINGS_SCHEMAS_PATH "${!outputLib}/share/gsettings-schemas/$name"
}
glibPreInstallPhase ()
{
 
    makeFlagsArray+=("gsettingsschemadir=${!outputLib}/share/gsettings-schemas/$name/glib-2.0/schemas/")
}
header ()
{
 
    echo "$1"
}
installCheckPhase ()
{
 
    runHook preInstallCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom installCheckPhase, doing nothing";
    else
        if [[ -z "${installCheckTarget:-}" ]] && ! make -n ${makefile:+-f $makefile} ${installCheckTarget:-installcheck} > /dev/null 2>&1; then
            echo "no installcheck target in ${makefile:-Makefile}, doing nothing";
        else
            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags "${makeFlagsArray[@]}" $installCheckFlags "${installCheckFlagsArray[@]}" ${installCheckTarget:-installcheck});
            echoCmd 'installcheck flags' "${flagsArray[@]}";
            make ${makefile:+-f $makefile} "${flagsArray[@]}";
            unset flagsArray;
        fi;
    fi;
    runHook postInstallCheck
}
installPhase ()
{
 
    runHook preInstall;
    if [ -n "$prefix" ]; then
        mkdir -p "$prefix";
    fi;
    local flagsArray=(SHELL=$SHELL $makeFlags "${makeFlagsArray[@]}" $installFlags "${installFlagsArray[@]}" ${installTargets:-install});
    echoCmd 'install flags' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    unset flagsArray;
    runHook postInstall
}
isELF ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [ "$magic" = 'ELF' ]; then
        return 0;
    else
        return 1;
    fi
}
isMachO ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xcf") || "$magic" = $(echo -ne "\xcf\xfa\xed\xfe") ]]; then
        return 0;
    else
        if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xce") || "$magic" = $(echo -ne "\xce\xfa\xed\xfe") ]]; then
            return 0;
        else
            if [[ "$magic" = $(echo -ne "\xca\xfe\xba\xbe") || "$magic" = $(echo -ne "\xbe\xba\xfe\xca") ]]; then
                return 0;
            else
                return 1;
            fi;
        fi;
    fi
}
isScript ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 2 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" =~ \#! ]]; then
        return 0;
    else
        return 1;
    fi
}
makeCmakeFindLibs ()
{
 
    isystem_seen=;
    iframework_seen=;
    for flag in ${NIX_CFLAGS_COMPILE-} ${NIX_LDFLAGS-};
    do
        if test -n "$isystem_seen" && test -d "$flag"; then
            isystem_seen=;
            export CMAKE_INCLUDE_PATH="${CMAKE_INCLUDE_PATH-}${CMAKE_INCLUDE_PATH:+:}${flag}";
        else
            if test -n "$iframework_seen" && test -d "$flag"; then
                iframework_seen=;
                export CMAKE_FRAMEWORK_PATH="${CMAKE_FRAMEWORK_PATH-}${CMAKE_FRAMEWORK_PATH:+:}${flag}";
            else
                isystem_seen=;
                iframework_seen=;
                case $flag in 
                    -I*)
                        export CMAKE_INCLUDE_PATH="${CMAKE_INCLUDE_PATH-}${CMAKE_INCLUDE_PATH:+:}${flag:2}"
                    ;;
                    -L*)
                        export CMAKE_LIBRARY_PATH="${CMAKE_LIBRARY_PATH-}${CMAKE_LIBRARY_PATH:+:}${flag:2}"
                    ;;
                    -F*)
                        export CMAKE_FRAMEWORK_PATH="${CMAKE_FRAMEWORK_PATH-}${CMAKE_FRAMEWORK_PATH:+:}${flag:2}"
                    ;;
                    -isystem)
                        isystem_seen=1
                    ;;
                    -iframework)
                        iframework_seen=1
                    ;;
                esac;
            fi;
        fi;
    done
}
make_glib_find_gsettings_schemas ()
{
 
    for maybe_dir in "$1"/share/gsettings-schemas/*;
    do
        if [[ -d "$maybe_dir/glib-2.0/schemas" ]]; then
            addToSearchPath GSETTINGS_SCHEMAS_PATH "$maybe_dir";
        fi;
    done
}
mapOffset ()
{
 
    local -r inputOffset="$1";
    local -n outputOffset="$2";
    if (( inputOffset <= 0 )); then
        outputOffset=$((inputOffset + hostOffset));
    else
        outputOffset=$((inputOffset - 1 + targetOffset));
    fi
}
moveToOutput ()
{
 
    local patt="$1";
    local dstOut="$2";
    local output;
    for output in $outputs;
    do
        if [ "${!output}" = "$dstOut" ]; then
            continue;
        fi;
        local srcPath;
        for srcPath in "${!output}"/$patt;
        do
            if [ ! -e "$srcPath" ] && [ ! -L "$srcPath" ]; then
                continue;
            fi;
            if [ "$dstOut" = REMOVE ]; then
                echo "Removing $srcPath";
                rm -r "$srcPath";
            else
                local dstPath="$dstOut${srcPath#${!output}}";
                echo "Moving $srcPath to $dstPath";
                if [ -d "$dstPath" ] && [ -d "$srcPath" ]; then
                    rmdir "$srcPath" --ignore-fail-on-non-empty;
                    if [ -d "$srcPath" ]; then
                        mv -t "$dstPath" "$srcPath"/*;
                        rmdir "$srcPath";
                    fi;
                else
                    mkdir -p "$(readlink -m "$dstPath/..")";
                    mv "$srcPath" "$dstPath";
                fi;
            fi;
            local srcParent="$(readlink -m "$srcPath/..")";
            if rmdir "$srcParent"; then
                echo "Removing empty $srcParent/ and (possibly) its parents";
                rmdir -p --ignore-fail-on-non-empty "$(readlink -m "$srcParent/..")" 2> /dev/null || true;
            fi;
        done;
    done
}
patchELF ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    header "shrinking RPATHs of ELF executables and libraries in $dir";
    local i;
    while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if ! isELF "$i"; then
            continue;
        fi;
        echo "shrinking $i";
        patchelf --shrink-rpath "$i" || true;
    done < <(find "$dir" -type f -print0);
    stopNest
}
patchPhase ()
{
 
    runHook prePatch;
    for i in ${patches:-};
    do
        header "applying patch $i" 3;
        local uncompress=cat;
        case "$i" in 
            *.gz)
                uncompress="gzip -d"
            ;;
            *.bz2)
                uncompress="bzip2 -d"
            ;;
            *.xz)
                uncompress="xz -d"
            ;;
            *.lzma)
                uncompress="lzma -d"
            ;;
        esac;
        $uncompress < "$i" 2>&1 | patch ${patchFlags:--p1};
    done;
    runHook postPatch
}
patchShebangs ()
{
 
    local pathName;
    if [[ "$1" == "--host" ]]; then
        pathName=HOST_PATH;
        shift;
    else
        if [[ "$1" == "--build" ]]; then
            pathName=PATH;
            shift;
        fi;
    fi;
    echo "patching script interpreter paths in $@";
    local f;
    local oldPath;
    local newPath;
    local arg0;
    local args;
    local oldInterpreterLine;
    local newInterpreterLine;
    if [[ $# -eq 0 ]]; then
        echo "No arguments supplied to patchShebangs" 1>&2;
        return 0;
    fi;
    local f;
    while IFS= read -r -d '' f; do
        isScript "$f" || continue;
        read -r oldInterpreterLine < "$f";
        read -r oldPath arg0 args <<< "${oldInterpreterLine:2}";
        if [[ -z "$pathName" ]]; then
            if [[ -n $strictDeps && $f == "$NIX_STORE"* ]]; then
                pathName=HOST_PATH;
            else
                pathName=PATH;
            fi;
        fi;
        if [[ "$oldPath" == *"/bin/env" ]]; then
            if [[ $arg0 == "-"* || $arg0 == *"="* ]]; then
                echo "$f: unsupported interpreter directive \"$oldInterpreterLine\" (set dontPatchShebangs=1 and handle shebang patching yourself)" 1>&2;
                exit 1;
            fi;
            newPath="$(PATH="${!pathName}" command -v "$arg0" || true)";
        else
            if [[ -z $oldPath ]]; then
                oldPath="/bin/sh";
            fi;
            newPath="$(PATH="${!pathName}" command -v "$(basename "$oldPath")" || true)";
            args="$arg0 $args";
        fi;
        newInterpreterLine="$newPath $args";
        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};
        if [[ -n "$oldPath" && "${oldPath:0:${#NIX_STORE}}" != "$NIX_STORE" ]]; then
            if [[ -n "$newPath" && "$newPath" != "$oldPath" ]]; then
                echo "$f: interpreter directive changed from \"$oldInterpreterLine\" to \"$newInterpreterLine\"";
                escapedInterpreterLine=${newInterpreterLine//\\/\\\\};
                timestamp=$(stat --printf "%y" "$f");
                sed -i -e "1 s|.*|#\!$escapedInterpreterLine|" "$f";
                touch --date "$timestamp" "$f";
            fi;
        fi;
    done < <(find "$@" -type f -perm -0100 -print0);
    stopNest
}
patchShebangsAuto ()
{
 
    if [[ -z "${dontPatchShebangs-}" && -e "$prefix" ]]; then
        if [[ "$output" != out && "$output" = "$outputDev" ]]; then
            patchShebangs --build "$prefix";
        else
            patchShebangs --host "$prefix";
        fi;
    fi
}
pkgConfigWrapper_addPkgConfigPath ()
{
 
    local role_post;
    getHostRoleEnvHook;
    addToSearchPath "PKG_CONFIG_PATH${role_post}" "$1/lib/pkgconfig";
    addToSearchPath "PKG_CONFIG_PATH${role_post}" "$1/share/pkgconfig"
}
printLines ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s\n' "$@"
}
printWords ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s ' "$@"
}
runHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook;
    for hook in "_callImplicitHook 0 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _eval "$hook" "$@";
    done;
    return 0
}
runOneHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook ret=1;
    for hook in "_callImplicitHook 1 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        if _eval "$hook" "$@"; then
            ret=0;
            break;
        fi;
    done;
    return "$ret"
}
showPhaseFooter ()
{
 
    local phase="$1";
    local startTime="$2";
    local endTime="$3";
    local delta=$(( endTime - startTime ));
    (( $delta < 30 )) && return;
    local H=$((delta/3600));
    local M=$((delta%3600/60));
    local S=$((delta%60));
    echo -n "$phase completed in ";
    (( $H > 0 )) && echo -n "$H hours ";
    (( $M > 0 )) && echo -n "$M minutes ";
    echo "$S seconds"
}
showPhaseHeader ()
{
 
    local phase="$1";
    case "$phase" in 
        unpackPhase)
            header "unpacking sources"
        ;;
        patchPhase)
            header "patching sources"
        ;;
        configurePhase)
            header "configuring"
        ;;
        buildPhase)
            header "building"
        ;;
        checkPhase)
            header "running tests"
        ;;
        installPhase)
            header "installing"
        ;;
        fixupPhase)
            header "post-installation fixup"
        ;;
        installCheckPhase)
            header "running install tests"
        ;;
        *)
            header "$phase"
        ;;
    esac
}
stopNest ()
{
 
    true
}
stripDirs ()
{
 
    local cmd="$1";
    local ranlibCmd="$2";
    local paths="$3";
    local stripFlags="$4";
    local pathsNew=;
    local p;
    for p in ${paths};
    do
        if [ -e "$prefix/$p" ]; then
            pathsNew="${pathsNew} $prefix/$p";
        fi;
    done;
    paths=${pathsNew};
    if [ -n "${paths}" ]; then
        echo "stripping (with command $cmd and flags $stripFlags) in $paths";
        find $paths -type f -a '!' -wholename "$prefix/lib/debug/*" -exec $cmd $stripFlags '{}' \; 2> /dev/null;
        find $paths -name '*.a' -type f -exec $ranlibCmd '{}' \; 2> /dev/null;
    fi
}
stripHash ()
{
 
    local strippedName casematchOpt=0;
    strippedName="$(basename -- "$1")";
    shopt -q nocasematch && casematchOpt=1;
    shopt -u nocasematch;
    if [[ "$strippedName" =~ ^[a-z0-9]{32}- ]]; then
        echo "${strippedName:33}";
    else
        echo "$strippedName";
    fi;
    if (( casematchOpt )); then
        shopt -s nocasematch;
    fi
}
substitute ()
{
 
    local input="$1";
    local output="$2";
    shift 2;
    if [ ! -f "$input" ]; then
        echo "substitute(): ERROR: file '$input' does not exist" 1>&2;
        return 1;
    fi;
    local content;
    consumeEntire content < "$input";
    if [ -e "$output" ]; then
        chmod +w "$output";
    fi;
    substituteStream content "file '$input'" "$@" > "$output"
}
substituteAll ()
{
 
    local input="$1";
    local output="$2";
    local -a args=();
    _allFlags;
    substitute "$input" "$output" "${args[@]}"
}
substituteAllInPlace ()
{
 
    local fileName="$1";
    shift;
    substituteAll "$fileName" "$fileName" "$@"
}
substituteAllStream ()
{
 
    local -a args=();
    _allFlags;
    substituteStream "$1" "$2" "${args[@]}"
}
substituteInPlace ()
{
 
    local -a fileNames=();
    for arg in "$@";
    do
        if [[ "$arg" = "--"* ]]; then
            break;
        fi;
        fileNames+=("$arg");
        shift;
    done;
    for file in "${fileNames[@]}";
    do
        substitute "$file" "$file" "$@";
    done
}
substituteStream ()
{
 
    local var=$1;
    local description=$2;
    shift 2;
    while (( "$#" )); do
        case "$1" in 
            --replace)
                pattern="$2";
                replacement="$3";
                shift 3;
                local savedvar;
                savedvar="${!var}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                if [ "$pattern" != "$replacement" ]; then
                    if [ "${!var}" == "$savedvar" ]; then
                        echo "substituteStream(): WARNING: pattern '$pattern' doesn't match anything in $description" 1>&2;
                    fi;
                fi
            ;;
            --subst-var)
                local varName="$2";
                shift 2;
                if ! [[ "$varName" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
                    echo "substituteStream(): ERROR: substitution variables must be valid Bash names, \"$varName\" isn't." 1>&2;
                    return 1;
                fi;
                if [ -z ${!varName+x} ]; then
                    echo "substituteStream(): ERROR: variable \$$varName is unset" 1>&2;
                    return 1;
                fi;
                pattern="@$varName@";
                replacement="${!varName}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var-by)
                pattern="@$2@";
                replacement="$3";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                shift 3
            ;;
            *)
                echo "substituteStream(): ERROR: Invalid command line argument: $1" 1>&2;
                return 1
            ;;
        esac;
    done;
    printf "%s" "${!var}"
}
unpackFile ()
{
 
    curSrc="$1";
    header "unpacking source archive $curSrc" 3;
    if ! runOneHook unpackCmd "$curSrc"; then
        echo "do not know how to unpack source archive $curSrc";
        exit 1;
    fi
}
unpackPhase ()
{
 
    runHook preUnpack;
    if [ -z "${srcs:-}" ]; then
        if [ -z "${src:-}" ]; then
            echo 'variable $src or $srcs should point to the source';
            exit 1;
        fi;
        srcs="$src";
    fi;
    local dirsBefore="";
    for i in *;
    do
        if [ -d "$i" ]; then
            dirsBefore="$dirsBefore $i ";
        fi;
    done;
    for i in $srcs;
    do
        unpackFile "$i";
    done;
    : ${sourceRoot=};
    if [ -n "${setSourceRoot:-}" ]; then
        runOneHook setSourceRoot;
    else
        if [ -z "$sourceRoot" ]; then
            for i in *;
            do
                if [ -d "$i" ]; then
                    case $dirsBefore in 
                        *\ $i\ *)

                        ;;
                        *)
                            if [ -n "$sourceRoot" ]; then
                                echo "unpacker produced multiple directories";
                                exit 1;
                            fi;
                            sourceRoot="$i"
                        ;;
                    esac;
                fi;
            done;
        fi;
    fi;
    if [ -z "$sourceRoot" ]; then
        echo "unpacker appears to have produced no directories";
        exit 1;
    fi;
    echo "source root is $sourceRoot";
    if [ "${dontMakeSourcesWritable:-0}" != 1 ]; then
        chmod -R u+w -- "$sourceRoot";
    fi;
    runHook postUnpack
}
updateSourceDateEpoch ()
{
 
    local path="$1";
    local -a res=($(find "$path" -type f -not -newer "$NIX_BUILD_TOP/.." -printf '%T@ %p\0'                     | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));
    local time="${res[0]//\.[0-9]*/}";
    local newestFile="${res[1]}";
    if [ "${time:-0}" -gt "$SOURCE_DATE_EPOCH" ]; then
        echo "setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile";
        export SOURCE_DATE_EPOCH="$time";
        local now="$(date +%s)";
        if [ "$time" -gt $((now - 60)) ]; then
            echo "warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic";
        fi;
    fi
}
PATH="$PATH:$nix_saved_PATH"
XDG_DATA_DIRS="$XDG_DATA_DIRS:$nix_saved_XDG_DATA_DIRS"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "$shellHook"
